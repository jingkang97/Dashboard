[{"/Users/jingkangng/Documents/Y4S1/CG4002/dashboard/client/src/index.js":"1","/Users/jingkangng/Documents/Y4S1/CG4002/dashboard/client/src/reportWebVitals.js":"2","/Users/jingkangng/Documents/Y4S1/CG4002/dashboard/client/src/App.js":"3","/Users/jingkangng/Documents/Y4S1/CG4002/dashboard/client/src/components/Main/Main.js":"4","/Users/jingkangng/Documents/Y4S1/CG4002/dashboard/client/src/components/Overview/Overview.js":"5","/Users/jingkangng/Documents/Y4S1/CG4002/dashboard/client/src/components/User/User.js":"6","/Users/jingkangng/Documents/Y4S1/CG4002/dashboard/client/src/components/Session/Session.js":"7","/Users/jingkangng/Documents/Y4S1/CG4002/dashboard/client/src/components/Overview/dummydata.js":"8","/Users/jingkangng/Documents/Y4S1/CG4002/dashboard/client/src/components/Session/dummydata.js":"9","/Users/jingkangng/Documents/Y4S1/CG4002/dashboard/client/src/components/User/dummydata.js":"10","/Users/jingkangng/Documents/Y4S1/CG4002/dashboard/client/src/components/Login/Login.js":"11","/Users/jingkangng/Documents/Y4S1/CG4002/dashboard/client/src/components/api/index.js":"12","/Users/jingkangng/Documents/Y4S1/CG4002/dashboard/client/src/components/Overview/BarChart.js":"13","/Users/jingkangng/Documents/Y4S1/CG4002/dashboard/client/src/components/Authorisation/Authorisation.js":"14","/Users/jingkangng/Documents/Y4S1/CG4002/dashboard/client/src/reducers/index.js":"15","/Users/jingkangng/Documents/Y4S1/CG4002/dashboard/client/src/reducers/auth.js":"16","/Users/jingkangng/Documents/Y4S1/CG4002/dashboard/client/src/constants/actionTypes.js":"17","/Users/jingkangng/Documents/Y4S1/CG4002/dashboard/client/src/actions/auth.js":"18","/Users/jingkangng/Documents/Y4S1/CG4002/dashboard/client/src/reducers/user.js":"19","/Users/jingkangng/Documents/Y4S1/CG4002/dashboard/client/src/actions/user.js":"20","/Users/jingkangng/Documents/Y4S1/CG4002/dashboard/client/src/components/Session/NewSession.js":"21","/Users/jingkangng/Documents/Y4S1/CG4002/dashboard/client/src/components/Session/Analytics.js":"22","/Users/jingkangng/Documents/Y4S1/CG4002/dashboard/client/src/components/Session/DoughnutChart.js":"23","/Users/jingkangng/Documents/Y4S1/CG4002/dashboard/client/src/components/Session/SyncGraph.js":"24","/Users/jingkangng/Documents/Y4S1/CG4002/dashboard/client/src/components/Session/FatigueGraph.js":"25"},{"size":733,"mtime":1632209111931,"results":"26","hashOfConfig":"27"},{"size":362,"mtime":1629962332836,"results":"28","hashOfConfig":"27"},{"size":740,"mtime":1632124919810,"results":"29","hashOfConfig":"27"},{"size":6378,"mtime":1632228080921,"results":"30","hashOfConfig":"27"},{"size":11321,"mtime":1633570134678,"results":"31","hashOfConfig":"27"},{"size":11961,"mtime":1633505103224,"results":"32","hashOfConfig":"27"},{"size":6354,"mtime":1633525430968,"results":"33","hashOfConfig":"27"},{"size":614,"mtime":1630076595177,"results":"34","hashOfConfig":"27"},{"size":631,"mtime":1633440532069,"results":"35","hashOfConfig":"27"},{"size":690,"mtime":1630990698377,"results":"36","hashOfConfig":"27"},{"size":9403,"mtime":1632228092940,"results":"37","hashOfConfig":"27"},{"size":747,"mtime":1633530149214,"results":"38","hashOfConfig":"27"},{"size":446,"mtime":1632125521438,"results":"39","hashOfConfig":"27"},{"size":2082,"mtime":1632216179765,"results":"40","hashOfConfig":"27"},{"size":145,"mtime":1632221545210,"results":"41","hashOfConfig":"27"},{"size":775,"mtime":1632227676509,"results":"42","hashOfConfig":"27"},{"size":169,"mtime":1632216949822,"results":"43","hashOfConfig":"27"},{"size":719,"mtime":1632222234550,"results":"44","hashOfConfig":"27"},{"size":900,"mtime":1632228079863,"results":"45","hashOfConfig":"27"},{"size":958,"mtime":1632228032451,"results":"46","hashOfConfig":"27"},{"size":22085,"mtime":1633533330785,"results":"47","hashOfConfig":"27"},{"size":23374,"mtime":1633503276007,"results":"48","hashOfConfig":"27"},{"size":1282,"mtime":1632796699422,"results":"49","hashOfConfig":"27"},{"size":2285,"mtime":1632830677825,"results":"50","hashOfConfig":"27"},{"size":2734,"mtime":1632830646809,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1hy9dgj",{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":39,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"54"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"54"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"54"},"/Users/jingkangng/Documents/Y4S1/CG4002/dashboard/client/src/index.js",[],["113","114"],"/Users/jingkangng/Documents/Y4S1/CG4002/dashboard/client/src/reportWebVitals.js",[],"/Users/jingkangng/Documents/Y4S1/CG4002/dashboard/client/src/App.js",["115"],"import './App.css';\nimport Main from './components/Main/Main'\nimport Login from './components/Login/Login'\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\nimport BarChart from './components/Overview/BarChart';\n\n\nfunction App() {\n  return (\n    <Router>\n\n      <Switch>\n        {/* <Login /> */}\n        {/* <Main /> */}\n        <Route exact path=\"/\"><Redirect to=\"/login\" /></Route>\n        <Route exact path=\"/login\" component={Login} />\n        <Route exact path=\"/overview\" component = {Main} />\n        <Route exact path=\"/users\" component = {Main} />\n        <Route exact path=\"/session\" component = {Main} />\n        \n      </Switch>\n      \n    </Router>\n    \n  );\n}\n\nexport default App;\n","/Users/jingkangng/Documents/Y4S1/CG4002/dashboard/client/src/components/Main/Main.js",["116","117","118","119","120","121","122","123"],"import React, {useEffect, useState} from 'react';\nimport { Layout, Menu, Avatar, Button, Select, Dropdown } from 'antd';\nimport { DashboardOutlined, UserOutlined, RightOutlined, LeftOutlined } from '@ant-design/icons';\nimport { CollectionPlay } from 'react-bootstrap-icons';\nimport { Switch, Route, Link, useLocation, Redirect, useHistory} from \"react-router-dom\";\nimport Overview from '../Overview/Overview';\nimport Session from '../Session/Session'\nimport User from '../User/User'\nimport '../../style/custom-antd.css'\nimport './styles.css'\nimport * as api from '../api/index'\nimport { useDispatch } from 'react-redux';\n\n\nconst Main = () => {\n    const dispatch = useDispatch()\n    const { Option } = Select;\n    const location = useLocation();\n    const history = useHistory();\n    const { Header, Content, Sider } = Layout;\n    const [collapse, setCollapse] = React.useState(false)\n    const [user, setUser] = React.useState('')\n    const [profile, setProfile] = useState({\n        id: '',\n        name: '',\n        // username: localStorage.getItem('username'),\n        username: JSON.parse(localStorage.getItem('profile'))?.username,\n        password: '',\n        wearable_name: '',\n        wearable_id: '',\n        image: JSON.parse(localStorage.getItem('profile'))?.image\n      })\n    const handleCollapse = () => {setCollapse(!collapse)}\n    const handleChange = (value) => { \n        if(value == 'Logout'){\n            dispatch({type: 'LOGOUT'})\n            history.push('/login')\n            localStorage.clear()\n        }else{\n            setUser(value)\n        }\n    }\n    const getUser = async() => {\n        try {\n          await api.getUser(profile.username).then(user => {\n            console.log(user)\n            setProfile({\n              id: user.data.id,\n              name: user.data.name,\n              username: user.data.username,\n              password: user.data.password,\n              wearable_name: user.data.wearable_name,\n              wearable_id: user.data.wearable_id,\n              image: user.data.image\n            })\n            console.log(user)\n          })\n        } catch (error) {\n          alert(error)\n        }\n      }\n    useEffect(() => {\n        getUser()\n    }, [])\n\n    return ( \n        <div>\n            <Layout style={{ height: '100vh', overflow:'hidden'}}>\n                <Sider width={200} className=\"sider\"\n                // collapsible \n                collapsed={collapse}\n                onCollapse={handleCollapse}\n                >\n                    <Button type=\"primary\" onClick={handleCollapse} style={{border:'0px', borderRadius:'0px', backgroundColor: '#5a65ea' , position:'absolute', bottom:'0', width:'100%', height:'50px'}}>\n                        {collapse ? <RightOutlined /> : <LeftOutlined />}\n                    </Button>\n                    <div className=\"logo\">\n                        <img src=\"DanceOnLogo.svg\" style={{height:'40px'}}/>\n                        {collapse ? null : <div style={{marginLeft:'10px'}}>DANCE<span style={{fontWeight:'bold', color:'#5a65ea'}}>DANCE</span></div>}\n                    </div>\n                    <Menu\n                        style={{ height: '100%', borderRightColor:'transparent', \n                        backgroundColor:'#202225', \n                        color:'#9C9EAA'}}\n                        defaultSelectedKeys={location.pathname == '/' ? ['overview'] : [location.pathname.slice(1)]}\n                        mode=\"inline\"\n                    >\n                        <Menu.Item className=\"menuItem\" key=\"overview\" icon={<DashboardOutlined style={{fontSize:'25px'}}/>}>\n                            <Link to=\"/overview\">\n                                Overview\n                            </Link>\n                        </Menu.Item>\n                        <Menu.Item className=\"menuItem\" key=\"session\" icon={<CollectionPlay style={{fontSize:'25px'}}/>}>\n                            <Link to=\"/session\" >Session</Link>\n                        </Menu.Item>   \n                        <Menu.Item className=\"menuItem\" key=\"users\" icon={<UserOutlined style={{fontSize:'25px'}}/>}>\n                            <Link to=\"/users\" >Users</Link>\n                        </Menu.Item>   \n                    </Menu>\n                </Sider>\n                <Layout>\n                    <Header className=\"header\">\n                        {location.pathname == '/overview' ? 'Overview' : (location.pathname == '/users' ? 'Users' : (location.pathname == '/session' ? 'Session': null))}\n                        <div style={{position:'absolute', right:'0', marginRight:'20px',  fontWeight:'normal', fontSize:'15px', display:'flex', flexDirection:'row', alignItems:'center'}}>\n                        <Avatar size={40} src={profile.image} icon={<UserOutlined />} />\n                        {/* {localStorage.getItem('username')} */}\n                            <div style={{marginRight:'0px'}}> \n\n    \n                            <Select defaultValue={profile.username} style={{ width: '100%', minWidth:'70px'}} onChange={handleChange}>\n                                {/* <Select defaultValue=\"Alex\" style={{ width: '100%'}} onChange={handleChange}> */}\n                                    {/* <Option value=\"Alex\">Alex</Option>\n                                    <Option value=\"Lucy\">Lucy</Option>\n                                    <Option value=\"Li Mingzhen\">Mingzhen</Option> */}\n                                    <Option value=\"Logout\">Logout</Option>\n                                </Select>\n                            </div>\n                        </div>\n                    </Header>\n                    <Content className=\"content\" >\n                        <Switch>\n                            <Route exact path=\"/\"><Redirect to=\"/overview\" /></Route>\n                            <Route path=\"/overview\">\n                                <Overview user={user}/>\n                            </Route>\n                            <Route path=\"/users\">\n                                <User user={user}/>\n                            </Route>\n                            <Route path=\"/session\">\n                                <Session />\n                            </Route>\n                        </Switch>\n                    </Content>\n                </Layout>\n            </Layout>\n        </div>\n     );\n}\n \nexport default Main;\n\n\n    ","/Users/jingkangng/Documents/Y4S1/CG4002/dashboard/client/src/components/Overview/Overview.js",["124","125","126","127","128","129","130"],"/Users/jingkangng/Documents/Y4S1/CG4002/dashboard/client/src/components/User/User.js",["131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158"],"import React, {Profiler, useEffect, useState} from 'react';\nimport { UserOutlined, BarcodeOutlined, PlusOutlined, LoadingOutlined } from '@ant-design/icons';\nimport { Table, Tag, Space, Avatar, Spin, Button, Input, Select, Upload, message } from 'antd';\nimport { IoWatchOutline, IoAddOutline } from \"react-icons/io5\";\nimport FileBase from 'react-file-base64'\n\nimport Avatars from \"react-avatar-edit\";\n\nimport './styles.css'\nimport * as dummy from './dummydata'\nimport {io} from 'socket.io-client'\nimport * as api from '../api/index.js'\nimport Authorisation from '../Authorisation/Authorisation';\n// import { set } from 'mongoose';\nimport { useDispatch } from 'react-redux';\nimport {getusers, getuser} from '../../actions/user'\nimport { useSelector } from 'react-redux';\n\nconst columns = [\n    {\n      title: 'User',\n      dataIndex: 'username',\n      key: 'name',\n      render: text => <div style={{color:'white', display:'flex', flexDirection:'row', alignItems:'center'}}><div style={{width:'100%'}}>{text} </div> </div>,\n    },\n    {\n      dataIndex: 'image',\n      key: 'image',\n      render: text => <Avatar src={text}/>\n\n    },\n    {\n        title: 'Wearable Name',\n        dataIndex: 'wearable_name',\n        key: 'wearable_name',\n        render: text => \n            <>\n              <Tag color={text == \"Dance Band Pro\" ? \"pink\" : (text == \"Dance Band Lite\" ? \"green\" : null)} style={{backgroundColor:\"transparent\", color:'white'}}>\n                {text}\n              </Tag>\n            </>\n      },\n      {\n        title: 'Wearable ID',\n        dataIndex: 'wearable_id',\n        key: 'wearable_id',\n        render: text => \n            <>\n              <div>{text}</div>\n            </>\n      },\n    // {\n    //   title: 'Action',\n    //   key: 'action',\n    //   render: (text, record) => (\n    //     <Space size=\"middle\">\n    //       <a>View</a>\n    //       {/* <a style={{color:'red'}}>Delete</a> */}\n    //     </Space>\n    //   ),\n    // },\n  ];\n\nconst User = () => {\n    const dispatch = useDispatch()\n    // const user_list = useSelector((state) => state.user)\n    const { Option } = Select;\n    const [users, setUsers] = useState(null)\n    const [profileLoading, setProfileLoading] = useState(false)\n    const [imageLoading, setImageLoading] = useState(false)\n    const [imageUrl, setImageUrl] = useState('')\n    const [loading, setLoading] = useState(true)\n    const [edit, setEdit] = useState(false)\n    const [close, setClose] = useState(false)\n\n    const [preview, setPreview] = useState(null);\n    function onClose() {\n      setPreview(null);\n    }\n    function onCrop(pv) {\n      setPreview(pv);\n    }\n    function onBeforeFileLoad(elem) {\n      if (elem.target.files[0].size > 71680) {\n        alert(\"File is too big!\");\n        elem.target.value = \"\";\n      }\n    }\n\n    // console.log(user_list)\n\n    const [profile, setProfile] = useState({\n      id: '',\n      name: '',\n      username: JSON.parse(localStorage.getItem('profile')).username,\n      password: '',\n      wearable_name: '',\n      wearable_id: '',\n      image:''\n    })\n    \n    const handleEdit = (e) => {\n      setEdit(true)\n      \n    }\n    const handleDismiss = (e) => {\n      setEdit(false)\n      getUser()\n    }\n    const handleSelect = (value) => {\n      setProfile({...profile, wearable_name: value})\n    }\n\n    const handleSubmit = async(e) => {\n      setEdit(false)\n      // console.log(profile)\n      try {\n        setProfileLoading(true)\n        console.log(profile)\n        \n        await api.editUser(profile).then(prof=>{\n          console.log(prof)\n          setProfile(prof) \n          // localStorage.setItem('profile',profile.username)      \n          getUser()\n        }\n        )\n        \n      } catch (error) {\n        alert(error)\n      }\n      finally{\n        setProfileLoading(false)\n        \n      }\n    }\n    const handleUserChange = (e) =>{\n      setProfile({...profile, username: e.target.value})\n      console.log(profile.username)\n    }\n\n    const handleWearableIdChange = (e) =>{\n      setProfile({...profile, wearable_id: e.target.value})\n      console.log(profile.wearable_id)\n    }\n    const getUser = async() => {\n      try {\n        setProfileLoading(true)\n        dispatch(getuser(profile.username))  \n\n        await api.getUser(profile.username).then(user => {\n          console.log(user)\n          setProfile({\n            id: user.data.id,\n            name: user.data.name,\n            username: user.data.username,\n            password: user.data.password,\n            wearable_name: user.data.wearable_name,\n            wearable_id: user.data.wearable_id,\n            image: user.data.image\n          })\n          console.log(user)\n        })\n      } catch (error) {\n        alert(error)\n      }\n      finally{\n        setProfileLoading(false)\n      }\n    }\n    const getUsers = async() => {\n      try {\n        setLoading(true)\n        // dispatch(getusers())\n        // setUsers(user_list)\n        // console.log(dispatch({type: 'GET_USERS'}))\n        // setUsers(dispatch({type: 'GET_USERS'}))\n        await api.getUsers().then(users => {\n          console.log(users)\n          setUsers(users.data)\n        })\n\n      } catch (error) {\n        alert(error)\n      }\n      finally{\n        setLoading(false)\n      }\n    }\n\n\n    useEffect(() => {\n        getUsers()\n        getUser()\n\n    },[])\n\n\n\n    return ( \n        <div style={{fontSize:'10px', color:'white'}}>\n            <div style={{height:'100%', borderRadius:'20px', overflow:'hidden',  boxShadow: '0px 0px 20px 1px #202225', marginTop:'20px', backgroundColor:'#3A3C41'}}>\n            <Spin spinning={loading} size=\"large\">\n                {edit ? null : \n                <div style={{position:'relative', display:'flex', flexDirection:'row', width:'100%', padding:'20px'}}>\n                    <Button type=\"primary\" style={{position:'absolute', right:'0', marginRight:'20px'}} onClick={handleEdit}>Edit</Button>\n                      <Avatar style={{borderRadius:'10px', height:'100px', width:'100px'}} shape=\"square\" src={profile.image}/>\n                      <div style={{marginLeft:'20px', display:'flex', flexDirection:'column', backgroundColor:'transparent'}}>\n                      <div style={{fontSize:'20px'}}>{profile.username}</div>\n                      <div style={{marginTop:'5px', display:'flex', flexDirection:'row', justifyContent:'flex-start', alignItems:'center'}}><IoWatchOutline fontSize=\"15px\"/><div style={{marginLeft:'7px'}}>{profile.wearable_id}</div></div>\n                      <div> <Tag color={profile.wearable_name == \"Dance Band Pro\" ? \"pink\" : (profile.wearable_name == \"Dance Band Lite\" ? \"green\" : null)} style={{marginTop:'10px', backgroundColor:\"transparent\", color:'white', width:'100%', justifyContent:'center', display:'flex'}}>{profile.wearable_name}</Tag></div>\n                      </div>\n                  </div>\n                }\n                </Spin>\n                {edit ? \n                <form>\n                <div style={{position:'relative', display:'flex', flexDirection:'row', width:'100%', padding:'20px'}}>\n                  {/* <div style={{display:'flex', flexDirection:'column'}}> */}\n                    {/* <Avatar style={{borderRadius:'10px', height:'100px', width:'100px'}} shape=\"square\" src={`${profile.image}`}/> */}\n                      <div>\n\n                        <label class=\"custom-file-upload\">\n                        {profile.image ? <img src={profile.image} style={{height:'100px', width: '100px', borderRadius:'10px'}}/> : null}\n\n                          <PlusOutlined style={{fontSize:\"50px\", position:'absolute', left: 0, right: 0, marginLeft:'auto', marginRight:'auto'}}/>\n                      <FileBase \n                      // className={classes.fileInput}\n                      type=\"file\" \n                      multiple={false} \n                      onDone={({base64}) => {\n                        setProfile({...profile, image: base64}) \n                        console.log(base64)} }/>\n                      </label>\n                      </div>\n                    {/* </div> */}\n                <div style={{position:'absolute', bottom:'0', right:'0', marginRight:'20px', marginBottom:'20px'}}>\n\n                  <Button type=\"primary\" onClick={handleSubmit}>Ok</Button>\n                  <Button style={{borderRadius:'5px', background:'transparent', marginLeft:'10px'}} onClick={handleDismiss}>Cancel</Button>\n                  \n                  </div>\n                  <div style={{marginLeft:'20px', display:'flex', flexDirection:'column', backgroundColor:'transparent'}}>\n                    <div style={{fontSize:'20px'}}>\n                      <div style={{fontSize:'15px', marginBottom:'5px'}}><UserOutlined /> Username</div>\n                      <Input \n                            value={profile.username}\n                            onChange={handleUserChange}\n                            name=\"username\" \n                            size=\"large\" \n                            placeholder=\"username\" \n                            style={{width:'90%', borderRadius:'8px', border:'transparent', background:'#2f3136'}}/>\n                    </div>\n                    \n                    <div>\n                    <div style={{fontSize:'15px', marginBottom:'5px', marginTop:'10px', display:'flex', flexDirection:'row', alignItems:'center'}}><IoWatchOutline style={{marginRight:'5px'}} fontSize=\"20px\"/> Wearable Name</div>\n\n                      <Select defaultValue={profile.wearable_name} size=\"large\" style={{ width: '100%', borderRadius:'20px'}}\n                        onChange={handleSelect}\n\n                      >\n                        <Option value=\"Dance Band Lite\">Dance Band Lite</Option>\n                        <Option value=\"Dance Band Pro\">Dance Band Pro</Option>\n                        <Option value=\"Not Selected\">Not Selected</Option>\n\n                      </Select>\n                    </div>\n\n                    <div style={{fontSize:'20px'}}>\n                      <div style={{fontSize:'15px', marginBottom:'5px',  marginTop:'10px', marginLeft:'5px'}}><BarcodeOutlined style={{marginRight:'5px'}}/> Wearable ID</div>\n                      <Input \n                            value={profile.wearable_id}\n                            onChange={handleWearableIdChange}\n                            name=\"username\" \n                            size=\"large\" \n                            placeholder=\"username\" \n                            style={{width:'90%', borderRadius:'8px', border:'transparent', background:'#2f3136'}}/>\n                    </div>\n\n                    \n                  </div>\n                </div> \n                </form>\n                : \n                null}\n            </div>\n            <div style={{height:'100%', maxHeight:'60vh',borderRadius:'20px', overflow:'scroll',  boxShadow: '0px 0px 20px 1px #202225', marginTop:'20px', backgroundColor:'#3A3C41'}}>\n              <Spin spinning={loading} size=\"large\">\n\n                    <div style={{overflow:'scroll', borderRadius:'20px', backgroundColor:'#3A3C41', padding:'20px', marginTop:'0px'}} >\n                        <div style={{marginLeft:'10px', fontSize:'20px', marginBottom:'10px', display:'flex', flexDirection:'row', alignItems:'center', justifyContent:'space-between'}}>\n                            <div style={{display:'flex', alignItems:'center'}}>\n                                All Users <UserOutlined style={{marginLeft:'10px'}}/>\n                            </div>\n                        </div>\n                        <Table \n                        pagination={false}\n                        columns={columns} \n                        // dataSource={dummy.data} \n                        dataSource={users} \n\n                        // dataSource={user_list}\n                        />\n                    </div>\n                    </Spin>\n\n            </div>\n\n        </div>\n     );\n}\nexport default Authorisation(User);","/Users/jingkangng/Documents/Y4S1/CG4002/dashboard/client/src/components/Session/Session.js",["159","160","161","162","163","164","165","166","167","168","169","170","171","172","173"],"import React, {useEffect, useState} from 'react';\nimport { Table, Tag, Space, Avatar, Spin, Button, Col, Row } from 'antd';\n\nimport { UserOutlined, AntDesignOutlined,LoadingOutlined, PlusCircleOutlined, CloseOutlined } from '@ant-design/icons';\nimport { AppIndicator, CollectionPlay, PlayBtn } from 'react-bootstrap-icons';\nimport { VscDebugStart, VscDebugStop } from 'react-icons/vsc';\nimport {io} from 'socket.io-client'\n\nimport * as dummy from './dummydata'\nimport './styles.css'\nimport Authorisation from '../Authorisation/Authorisation'\nimport NewSession from './NewSession'\nimport * as api from '../api/index'\nimport Modal from 'react-modal';\nimport Analytics from './Analytics'\n\n\nconst Session = () => {\n  const columns = [\n    {\n      title: 'Session Name',\n      dataIndex: 'sessionName',\n      key: 'sessionName',\n      render: text => <a style={{color:'white'}}>{text}</a>,\n    },\n    {\n      title: 'Start Time',\n      dataIndex: 'startTime',\n      key: 'startTime',\n    },\n    {\n      title: 'End Time',\n      dataIndex: 'endTime',\n      key: 'endTime',\n    },\n    {\n      title: 'Total Participants',\n      dataIndex: 'numberOfUsers',\n      key: 'numberOfUsers',\n      align: 'center',\n    },\n    {\n      title: 'Users',\n      key: 'users',\n      render: (text) => (\n        <div>\n        <Avatar.Group>{text.users.map((u)=>{return(\n          <Avatar src={u.userImage} >{u.userImage}</Avatar>\n        )\n          }\n        )}</Avatar.Group>\n        \n        </div>\n      ),\n    },\n    {\n      title: 'Usernames',\n      key: 'users',\n      align: 'center',\n      render: (text) => (\n        <div>\n        {text.users.map((u)=>{return (\n           <Tag color='pink' style={{background:'transparent', color:'pink'}}>\n              {u.username}\n           </Tag>\n        \n        )})} \n        </div>\n      ),\n    },\n    {\n      title: 'Action',\n      dataIndex: 'sessionName',\n      key: 'sessionName',\n      render: (text, record) => (\n        <Space size=\"middle\">\n          <a onClick={()=>{handleView(record)}}>\n            View Analytics\n          </a>\n        </Space>\n      ),\n    },\n  ];\n    const [loading, setLoading] = useState(false)    \n    const [buttonLoading, setButtonLoading] = useState(false)\n    const [isModalVisible, setIsModalVisible] = useState(false);\n    const [sessionList, setSessionList] = useState([])\n    const [sessionLoading, setSessionLoading] = useState(false)\n    const [socket, setSocket] = useState(null)\n\n    const [openView, setOpenView] = useState(false)\n    const [emg, setEmg] = useState([])\n    const [syncDelay, setSyncDelay] = useState([])\n    const [session, setSession] = useState([])\n    const [rows, setRows] = useState([])\n    const [sessionInformation, setSessionInformation] = useState(null)\n    \n    // const Analytics = ({stop, rows, session, emg, syncDelay}) => {\n\n    const handleView = (record) => {\n      // alert(text)\n      console.log(record)\n      setOpenView(true)\n      setEmg(record.emg)\n      setSyncDelay(record.syncDelay)\n      setSession(record.users)\n      setRows(record.users)\n      setSessionInformation(record)\n    }\n    const handleClick = (event) =>{\n      setIsModalVisible(true)\n      setInterval(()=>{setIsModalVisible(false)},1)\n\n    }\n\n    const closeModal = (event) => {\n      setOpenView(false)\n    }\n    const getSessions = async() => {\n      try {\n        setSessionLoading(true)\n        await api.getSessions().then((data)=>{\n          console.log(data.data)\n          setSessionList(data.data)\n          setSessionLoading(false)\n        })\n        \n      } catch (error) {\n        \n      }\n    }\n\n    useEffect(() => {\n      const messageListener = (data) => {\n        getSessions()\n        // console.log(data)\n      };\n      if(socket!=null){\n        socket.on('newSessions', messageListener)\n      return () => {\n        socket.off('newSessions', messageListener);\n      };\n      }\n      \n    }, [socket])\n\n    useEffect(() => {\n      setSocket(io(\"http://localhost:5000\"))\n    }, [])\n\n    useEffect(()=>{\n      getSessions()\n    },[])\n\n    return ( \n        <div style={{justifyContent:'center', width:'100%', position:'relative', marginTop:'0px'}}>\n           <Modal \n           isOpen={openView}\n          style={{\n            content: {\n              backgroundColor:'#3A3C41',\n              border:'solid 1px #3A3C41',\n              borderRadius:'20px',\n              padding:'20px'\n              // paddingBottom:'30px',\n            },\n            overlay: {\n              backgroundColor: 'rgba(0, 0, 0, 0.45)'\n            }}}\n           contentLabel=\"Example Modal\"\n          >\n            <div style={{display:'flex', flexDirection:'row', position:'relative'}}>\n            <Button type=\"primary\" style={{marginTop:'10px', background:'grey', border:'1px solid grey',marginRight:'10px', position:'absolute', right:'0', top:'0'}} shape=\"circle\" icon={<CloseOutlined />} size='big' onClick={closeModal}/>\n            </div>\n           \n\n            <Analytics stop={true} rows={rows} session={session} emg={emg} syncDelay={syncDelay}/>\n            \n          </Modal>\n          <div>\n            <NewSession openModal={isModalVisible}/>\n          </div>\n        <div style={{borderRadius:'20px', overflow:'hidden',  boxShadow: '0px 0px 20px 1px #202225', marginTop:'20px', backgroundColor:'#3A3C41'}}>\n          <Spin spinning={sessionLoading} delay={500} size=\"large\">\n            <div style={{overflow:'scroll', borderRadius:'20px', backgroundColor:'#3A3C41', padding:'20px', marginTop:'0px'}}>\n                <div style={{marginLeft:'10px', fontSize:'20px', marginBottom:'10px', display:'flex', flexDirection:'row', alignItems:'center', justifyContent:'space-between'}}>\n                    <div style={{display:'flex', alignItems:'center', color:'white'}}>All Sessions <CollectionPlay style={{marginLeft:'10px'}}/></div>\n                    <Button onClick={handleClick} type=\"primary\" className=\"new-session\"><PlusCircleOutlined /> New Session <Spin indicator={<LoadingOutlined style={{marginLeft:'10px', color:'white'}}/>} spinning={buttonLoading}/></Button>\n                  </div>\n                <Table \n                pagination={false}\n                columns={columns} \n                dataSource={sessionList} />\n            </div>\n          </Spin>\n        </div>\n        </div>\n     );\n}\n \nexport default Authorisation(Session);","/Users/jingkangng/Documents/Y4S1/CG4002/dashboard/client/src/components/Overview/dummydata.js",[],"/Users/jingkangng/Documents/Y4S1/CG4002/dashboard/client/src/components/Session/dummydata.js",[],"/Users/jingkangng/Documents/Y4S1/CG4002/dashboard/client/src/components/User/dummydata.js",[],"/Users/jingkangng/Documents/Y4S1/CG4002/dashboard/client/src/components/Login/Login.js",["174","175","176","177","178","179","180","181","182","183","184","185"],"import React, {useState, useEffect} from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory} from \"react-router-dom\";\nimport { Spin, Button, Input } from 'antd';\nimport { UserOutlined, LockOutlined, LoadingOutlined, IdcardOutlined } from '@ant-design/icons';\nimport * as api from '../api/index'\nimport './styles.css'\n\nimport {signin, signup} from '../../actions/auth'\n\nconst Login = () => {\n    const history = useHistory()\n    const dispatch = useDispatch()\n    const [type, setType] = useState('login')\n    const [loading, setLoading] = useState(false)\n    const [name, setName] = useState(null)\n    const [username, setUsername] = useState(null)\n    const [password, setPassword] = useState(null)\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const handleNameChange = (e) => { setName(e.target.value) }\n    const handleUserChange = (e) => { setUsername(e.target.value) }\n    const handlePasswordChange = (e) => { setPassword(e.target.value) }\n    const handleConfirmPasswordChange = (e) => { setConfirmPassword(e.target.value) }\n\n    const handleLogin = async (e) => {\n        e.preventDefault()\n        if(!password || !username){\n            alert('Fields cannot be empty!')\n        }else{\n            try {\n                setLoading(true)\n                console.log('using dispatch')\n                dispatch(signin({username: username, password:password}, history))\n                console.log('dispatch')\n                \n            } catch (error) {\n                alert(error)\n            }\n        }\n    }\n    const handleRegister = async (e) => {\n        e.preventDefault()\n        if(!password || !username || !confirmPassword){\n            alert('Passwords do not match!')\n        }\n        else if(confirmPassword != password){\n            alert('Fields cannot be empty!')\n        }else{\n            try {\n                e.preventDefault()\n                setLoading(true)\n                dispatch(signup({username: username, password:password}, history))\n                \n                // api.register({username: username, password: password}).then(resp => {\n                //     console.log(resp)\n                //     localStorage.setItem('token', resp.data.token)\n                //     localStorage.setItem('username', resp.data.username)\n                //     if(resp.data.authorised){\n                //         history.push('/overview')\n                //     }else{\n                //         alert(resp.data.message)\n                //         setLoading(false)\n                //     }\n                // })\n            } catch (error) {\n                alert(error)\n            }\n        }\n    }\n    const changeType = () => {\n        setUsername('')\n        setPassword('')\n        setConfirmPassword('')\n        if(type == 'login'){\n            setType('register');\n        }else{\n            setType('login')\n        }\n    }\n    return ( \n        <form onSubmit={type == 'login' ? handleLogin : handleRegister}>\n            <div style={{position:'relative', background:'#2f3136', height:'100vh', display:'flex', flexDirection:'column', justifyContent:'center', alignItems:'center', width:'100%'}}>\n                <div className={type}>\n                    <div style={{overflow:'hidden', position:'relative'}}>\n                        <div className=\"brand\">\n                            <img src=\"whitelogo.svg\" style={{height:'40px'}}/>\n                            <div style={{marginLeft:'10px'}}>DANCE<span style={{fontWeight:'bold', color:'white'}}>DANCE</span></div> \n                        </div>\n                        <div style={{height:'90px', width:'100%', overflow:'hidden', marginTop:'-30px', position: 'relative'}}>\n                        <svg height=\"100%\" width=\"100%\" id=\"svg\" viewBox=\"0 0 1440 400\" xmlns=\"http://www.w3.org/2000/svg\" class=\"transition duration-300 ease-in-out delay-150\"><path d=\"M 0,400 C 0,400 0,200 0,200 C 81.13875598086125,180.11483253588517 162.2775119617225,160.22966507177034 248,184 C 333.7224880382775,207.77033492822966 424.02870813397135,275.1961722488038 537,270 C 649.9712918660287,264.8038277511962 785.6076555023923,186.98564593301433 895,175 C 1004.3923444976077,163.01435406698567 1087.5406698564593,216.86124401913875 1174,232 C 1260.4593301435407,247.13875598086125 1350.2296650717703,223.5693779904306 1440,200 C 1440,200 1440,400 1440,400 Z\" stroke=\"none\" stroke-width=\"0\" fill=\"#5a65eaff\" class=\"transition-all duration-300 ease-in-out delay-150\" transform=\"rotate(-180 720 200)\"></path></svg>\n                        </div>\n                        <div style={{height:'120px', width:'150%',marginTop:'-115px'}}>\n                        <svg height=\"100%\" width=\"100%\" id=\"svg\" viewBox=\"0 0 1440 400\" xmlns=\"http://www.w3.org/2000/svg\" class=\"transition duration-300 ease-in-out delay-150\"><path d=\"M 0,400 C 0,400 0,200 0,200 C 126.54545454545456,194.94736842105263 253.09090909090912,189.89473684210526 340,171 C 426.9090909090909,152.10526315789474 474.18181818181813,119.36842105263159 547,151 C 619.8181818181819,182.6315789473684 718.1818181818184,278.6315789473684 821,273 C 923.8181818181816,267.3684210526316 1031.090909090909,160.10526315789474 1135,131 C 1238.909090909091,101.89473684210526 1339.4545454545455,150.94736842105263 1440,200 C 1440,200 1440,400 1440,400 Z\" stroke=\"none\" stroke-width=\"0\" fill=\"#5a65eaff\" fill-opacity=\"0.3\" class=\"transition-all duration-300 ease-in-out delay-150\" transform=\"rotate(-180 720 200)\"></path></svg>\n                        </div>\n                        <div style={{height:'120px', width:'90%',marginTop:'-120px'}}>\n                        <svg height=\"100%\" width=\"100%\" id=\"svg\" viewBox=\"0 0 1440 400\" xmlns=\"http://www.w3.org/2000/svg\" class=\"transition duration-300 ease-in-out delay-150\"><path d=\"M 0,400 C 0,400 0,200 0,200 C 126.54545454545456,194.94736842105263 253.09090909090912,189.89473684210526 340,171 C 426.9090909090909,152.10526315789474 474.18181818181813,119.36842105263159 547,151 C 619.8181818181819,182.6315789473684 718.1818181818184,278.6315789473684 821,273 C 923.8181818181816,267.3684210526316 1031.090909090909,160.10526315789474 1135,131 C 1238.909090909091,101.89473684210526 1339.4545454545455,150.94736842105263 1440,200 C 1440,200 1440,400 1440,400 Z\" stroke=\"none\" stroke-width=\"0\" fill=\"#5a65eaff\" fill-opacity=\"0.6\" class=\"transition-all duration-300 ease-in-out delay-150\" transform=\"rotate(-180 720 200)\"></path></svg>\n                        </div>\n                        <div style={{display:'flex', flexDirection:'column', alignItems:'center', marginTop:'-10px', justifyContent:'center'}}>\n                            {type == 'login' ? null : \n                            <Input name=\"name\" size=\"large\" \n                            value={name}\n                            onChange={handleNameChange}\n                            placeholder=\"name\" prefix={<IdcardOutlined /> } \n                            style={{width:'90%', marginTop:'10px', borderRadius:'8px', border:'transparent', background:'#2f3136', marginBottom:'10px'}}\n                            />}\n                            \n                            <Input \n                            value={username}\n                            onChange={handleUserChange}\n                            name=\"username\" size=\"large\" placeholder=\"username\" prefix={<UserOutlined />} style={{width:'90%', borderRadius:'8px', border:'transparent', background:'#2f3136'}}/>\n                            <Input.Password name=\"password\" size=\"large\"\n                            value={password}\n                            onChange={handlePasswordChange}\n                            placeholder=\"password\" prefix={<LockOutlined />} \n                            style={{width:'90%', marginTop:'10px', borderRadius:'8px', border:'transparent', background:'#2f3136'}}\n                            />\n                            {type == 'login' ? null : \n                            <Input.Password name=\"confirm password\" size=\"large\" \n                            value={confirmPassword}\n                            onChange={handleConfirmPasswordChange}\n                            placeholder=\"confirm password\" prefix={<LockOutlined />} \n                            style={{width:'90%', marginTop:'10px', borderRadius:'8px', border:'transparent', background:'#2f3136'}}\n                            />}\n                            \n                        </div>\n                        <div style={{width:'100%', height:'60px',display:'flex', flexDirection:'row', justifyContent:'center', background:'transparent', alignItems:'center'}}>\n                            <Button type=\"primary\" htmlType=\"submit\" style={{width:'90%', margin:'0px 10px 0px 10px', display:'flex', flexDirection:'row', justifyContent:'center', alignItems:'center'}}>{type == 'login' ? 'Login' : 'Register'} <Spin indicator={<LoadingOutlined style={{fontSize:'15px', marginLeft:'10px', color:'white'}}/>} spinning={loading}/> </Button>\n                        </div>\n                    </div>\n                </div>\n                <div style={{marginTop:'20px'}}>\n                    {type == 'login' ? <div>Not registered yet? <a onClick={changeType}>Create an Account </a> </div>: <div>Registered? <a onClick={changeType}>Login here </a> </div>}\n                </div>\n            </div>\n        </form>\n     );\n}\nexport default Login;","/Users/jingkangng/Documents/Y4S1/CG4002/dashboard/client/src/components/api/index.js",[],"/Users/jingkangng/Documents/Y4S1/CG4002/dashboard/client/src/components/Overview/BarChart.js",[],"/Users/jingkangng/Documents/Y4S1/CG4002/dashboard/client/src/components/Authorisation/Authorisation.js",[],"/Users/jingkangng/Documents/Y4S1/CG4002/dashboard/client/src/reducers/index.js",[],"/Users/jingkangng/Documents/Y4S1/CG4002/dashboard/client/src/reducers/auth.js",[],"/Users/jingkangng/Documents/Y4S1/CG4002/dashboard/client/src/constants/actionTypes.js",[],"/Users/jingkangng/Documents/Y4S1/CG4002/dashboard/client/src/actions/auth.js",[],"/Users/jingkangng/Documents/Y4S1/CG4002/dashboard/client/src/reducers/user.js",[],"/Users/jingkangng/Documents/Y4S1/CG4002/dashboard/client/src/actions/user.js",[],"/Users/jingkangng/Documents/Y4S1/CG4002/dashboard/client/src/components/Session/NewSession.js",["186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209"],"import React, {useState, useEffect} from 'react';\nimport { Table, Avatar, Tag, Input, Spin, Row, Col, Button} from 'antd'\nimport {UserOutlined, SyncOutlined,CloseOutlined} from '@ant-design/icons';\nimport { AiOutlineWarning, AiOutlineLike, AiOutlineUser } from 'react-icons/ai';\nimport {IoIosSync} from 'react-icons/io'\nimport {io} from 'socket.io-client'\nimport * as api from '../api/index'\nimport './styles.css'\nimport Analytics from './Analytics'\nimport moment from 'moment'\nimport Modal from 'react-modal';\n\nconst NewSession = ({openModal}) => {\n  const columns = [\n    {\n      title: 'User',\n      dataIndex: 'username',\n      key: 'name',\n      render: text => <div style={{color:'white', display:'flex', flexDirection:'row', alignItems:'center'}}><div style={{width:'100%'}}>{text} </div> </div>,\n    },\n    {\n      dataIndex: 'image',\n      key: 'image',\n      render: text => <Avatar src={text}/>\n\n    },\n    {\n        title: 'Wearable Name',\n        dataIndex: 'wearable_name',\n        key: 'wearable_name',\n        render: text => \n            <>\n              <Tag color={text == \"Dance Band Pro\" ? \"pink\" : (text == \"Dance Band Lite\" ? \"green\" : null)} style={{backgroundColor:\"transparent\", color:'white'}}>\n                {text}\n              </Tag>\n            </>\n      },\n      {\n        title: 'Wearable ID',\n        dataIndex: 'wearable_id',\n        key: 'wearable_id',\n        render: text => \n            <>\n              <div>{text}</div>\n            </>\n      },\n  ];\n  const [socket, setSocket] = useState(null)\n  const [users, setUsers] = useState(null)\n  const [sessionName, setSessionName] = useState('')\n  const [loading, setLoading] = useState(false)\n  const [rows, setRows] = useState([])\n  const [array, setArray] = useState([])\n  const [emg, setEmg] = useState([])\n  const [syncDelay, setSyncDelay] = useState([])\n  const [session, setSession] = useState([])\n  const [startTime, setStartTime] = useState(null)\n  const [endTime, setEndTime] = useState(null)\n\n  const [isModalVisible, setIsModalVisible] = useState(false)\n\n  const [startSession, setStartSession] = useState(false)\n  const [stop, setStop] = useState(false)\n  const [select, setSelect] = useState(true)\n  const [postLoading, setPostLoading] = useState(false)\n  const [sendPost, setSendPost] = useState(false)\n\n  const [danceScore, setDanceScore] = useState(0)\n  const [moveChart, setMoveChart] = useState([])\n  const [groupDanceScore, setGroupDanceScore] = useState([])\n  const [groupPositionScore, setGroupPositionScore] = useState([])\n  const [evaluation, setEvaluation] = useState(null)\n\n  const startSessionHandler = (e) => {\n    if(sessionName == ''){\n      alert('Please fill in the name first!')\n    }\n    else if(rows.length == 0){\n      alert('Please choose at least one user')\n    }\n    else if(rows.length > 3){\n      alert('Please choose at most three users')\n    }\n    else{\n      let current_time = moment()\n      setStartTime(current_time)\n      setSelect(false)\n      setStartSession(true)\n    }\n  }\n\n  const getEvaluation = async() => {\n    try {\n        await api.getEval().then(data => {\n          console.log(data.data.data)\n          setEvaluation(data.data.data)\n        })\n      } catch (error) {\n        alert(error)\n      }\n}\n\nconst calculateIndividualDance = () => {\n  let userDance = []\n  let moveChartList = []\n\n  for(let i = 0; i < session.length; i += 1){\n      userDance.push({username: session[i].username, userId: session[i].userId, movePercent: '0%', positionPercent:'0%'})\n      moveChartList.push({username: session[i].username, userId: session[i].userId, dataMove: [{name: 'correct', value: 0}, {name: 'wrong', value: 0}], dataPosition: [{name: 'correct', value: 0}, {name: 'wrong', value: 0}]})\n  }\n  \n  let totalMoveScore = 0\n  let totalCorrectMoveScore = 0\n  let totalWrongMoveScore = 0\n\n  let totalPositionScore = 0\n  let totalCorrectPositionScore = 0\n  let totalWrongPositionScore = 0\n\n\n  let moveScore = 0\n  let moveTotal = 0\n  let wrongMoveScore = 0\n\n  for(let j = 0; j < session.length; j += 1){\n      moveScore = 0\n      moveTotal = 0\n      wrongMoveScore = 0\n      for(let i = 0; i < session[j].session.length; i++){\n          moveTotal += 1\n          totalMoveScore += 1\n          if(session[j].session[i].danceMove == evaluation.datas[i].danceMove){\n              moveScore += 1\n              totalCorrectMoveScore += 1\n                    \n          }\n          else{\n              wrongMoveScore += 1\n              totalWrongMoveScore += 1\n          }\n      }           \n      userDance[j].movePercent = ((moveScore/moveTotal)*100).toFixed(1)              \n      moveChartList[j].dataMove[0].value = parseFloat(((moveScore/moveTotal)*100).toFixed(1))\n      moveChartList[j].dataMove[1].value = parseFloat(((wrongMoveScore/moveTotal)*100).toFixed(1))\n  }\n  \n  let danceScore = 0\n  let danceTotal = 0\n  let wrongDanceScore = 0\n  for(let j = 0; j < session.length; j += 1){\n      danceScore = 0\n      danceTotal = 0\n      wrongDanceScore = 0\n      for(let i = 0; i < session[j].session.length; i++){\n              danceTotal += 1\n              totalPositionScore += 1\n              let temp = evaluation.datas[i].position.split(',')\n              if(temp.indexOf(session[j].session[i].position) + 1 == session[j].session[i].position){\n                  danceScore += 1\n                  totalCorrectPositionScore += 1\n              }\n              else{\n                  wrongDanceScore += 1\n                  totalWrongPositionScore += 1\n                  moveChartList[j].dataPosition[1].value = parseFloat((wrongDanceScore).toFixed(1))\n              }\n          }\n      moveChartList[j].dataPosition[1].value = parseFloat(((wrongDanceScore/danceTotal)*100).toFixed(1))\n      userDance[j].positionPercent = ((danceScore/danceTotal)*100).toFixed(1)\n      moveChartList[j].dataPosition[0].value = parseFloat(((danceScore/danceTotal)*100).toFixed(1))\n  }\n  setMoveChart(moveChartList)\n  setDanceScore(userDance)\n\n  let totalWrongMoveScorePercentage = parseFloat(((totalWrongMoveScore/totalMoveScore)*100).toFixed(1))\n  let totalCorrectMoveScorePercentage = parseFloat(((totalCorrectMoveScore/totalMoveScore)*100).toFixed(1))\n\n  let totalWrongPositionScorePercentage = parseFloat(((totalWrongPositionScore/totalPositionScore)*100).toFixed(1))\n  let totalCorrectPositionScorePercentage = parseFloat(((totalCorrectPositionScore/totalPositionScore)*100).toFixed(1))\n\n  setGroupDanceScore([{name: 'correct', value: totalCorrectMoveScorePercentage},{name: 'wrong', value: totalWrongMoveScorePercentage}])\n  setGroupPositionScore([{name: 'correct', value: totalCorrectPositionScorePercentage},{name: 'wrong', value: totalWrongPositionScorePercentage}])\n}\n\n  const endSessionHandler = async(e) => {\n    e.preventDefault()\n    try{\n      let current_time = moment()\n      setEndTime(current_time)\n      setPostLoading(true)\n\n      let difference = 0\n      let start_time = startTime\n      let end_time = current_time\n      difference = end_time.diff(start_time)\n      let duration = moment.utc(difference).format(\"mm:ss\")\n\n      var tired = Math.max(...emg.map(o => o.emg)) >= 3\n      const body = {\n        sessionName: sessionName,\n        owner: JSON.parse(localStorage.getItem('profile'))?.username,\n        users: session,\n        numberOfUsers: session.length ,\n        syncDelay: syncDelay,\n        emg: emg,\n        startTime: startTime.format(\"h:mm:ss A\"),\n        endTime: moment().format(\"h:mm:ss A\"),\n        groupDanceScore: groupDanceScore,\n        groupPositionScore: groupPositionScore,\n        individualDanceScore: danceScore,\n        individualMoveScore: moveChart,\n        tired: tired,\n        duration: duration\n        // tired: , - calculate percentage of times emg hit above 3\n        // duration: moment(startTime).format(\"h:mm:ss A\"), - average, all duration add up/number of durations\n\n      }\n\n      var userList = []\n      for(var i = 0; i < session.length; i++){\n        userList.push(session[i].username)\n      }\n\n      const test = {\n            username: userList,\n            session: body\n      }\n      await api.addUserSession(test).then((data)=>{\n        api.postSession(body).then((data)=>{\n          // alert(data)\n          close()    \n          setPostLoading(false)\n        })\n      })\n      // await api.postSession(body).then((data)=>{\n      //   // alert(data)\n      //   console.log(data)\n      //   close()    \n      //   setPostLoading(false)\n      // })\n    }catch(e){\n      console.log(e)\n    }\n  }\n\n  const close = (e) => {\n    setSelect(true)\n    setStartSession(false)\n    setIsModalVisible(false)\n    setStartSession(false)\n    setStop(false)\n    setSendPost(false)\n    // reset all datas\n    setRows([])\n    setSessionName('')\n    setSession([])\n    setArray([])\n    setEmg([])\n    setSyncDelay([])\n\n  }\n\n  const handleGetResults = (e) => {\n    setStartSession(false)\n    setStop(true)\n    getEvaluation()\n\n  }\n\n  const handleSessionNameChange = (e) => {\n      setSessionName(e.target.value)\n  }\n    const getUsers = async() => {\n        try {\n            setLoading(true)\n            await api.getUsers().then(users => {\n              console.log(users)\n              setUsers(users.data)\n            })\n          } catch (error) {\n            alert(error)\n          }\n          finally{\n            setLoading(false)\n          }\n    }\n\n    useEffect(() => {\n      if(evaluation!=null){\n        calculateIndividualDance()\n      }\n    }, [evaluation])\n \n    useEffect(() => {\n        getUsers()\n    }, [])\n\n    useEffect(() => {\n      if(!startSession){\n        setSocket(null)\n      }\n      else if(startSession == true){\n        // setStartTime(Date.now())\n        setSocket(io(\"http://localhost:5000\"))\n      }\n    }, [startSession])\n\n    useEffect(() => {\n      console.log(session)\n    },[session])\n\n    useEffect(()=>{\n      if(openModal == true){\n        setIsModalVisible(true)\n      }\n    },[openModal])\n\n    useEffect(()=>{\n      const messageListener = (data) => {\n        // set start time\n        setSession(prevSess => prevSess.map(el => (el.userId == data.userId ? {...el,session:[...el.session, data]} : el)))        \n        setArray(prevArray => [...prevArray, data])\n        let current_time = moment().format(\"h:mm:ss A\")\n        if(data.hasOwnProperty('emg')){\n          setEmg(prevArray => [...prevArray, {emg:data.emg, time: current_time}])\n        }\n        if(data.hasOwnProperty('syncDelay')){\n          setSyncDelay(prevArray => [...prevArray, {sync: data.syncDelay, time: current_time}])\n        }\n        \n        console.log(data)\n      };\n      if(socket!=null){\n        socket.on('newData', messageListener)\n      return () => {\n        socket.off('newData', messageListener);\n      };\n      }\n      \n    },[socket])\n\n    useEffect(() => {\n      if(stop){\n        setEndTime(Date.now())\n      }\n     \n    }, [stop])\n\n    return ( \n      <Modal \n           isOpen={isModalVisible}\n          style={{\n            content: {\n              backgroundColor:'#3A3C41',\n              border:'solid 1px #3A3C41',\n              borderRadius:'20px',\n              padding:'0px'\n              // paddingBottom:'30px',\n            },\n            overlay: {\n              backgroundColor: 'rgba(0, 0, 0, 0.45)'\n            }}}\n           contentLabel=\"Example Modal\"\n          >\n          <Spin style={{height:'100%', display:'flex', flexDirection:'column', justifyContent:'center', alignItems:'center'}} spinning={postLoading} size=\"large\">\n          <Button type=\"primary\" style={{marginTop:'10px', background:'grey', border:'1px solid grey',marginRight:'10px', position:'absolute', right:'0', top:'0'}} shape=\"circle\" icon={<CloseOutlined />} size='big' onClick={close}/>\n\n        <div style={{height:'100%', width:'100%', padding:'20px'}}>\n          {console.log(emg)}\n            {startSession ? \n            <div>\n                {/* DASHBOARD */}\n                <div style={{fontSize:'30px', color:'white', marginBottom:'10px'}}>\n                Session: {sessionName}\n\n                </div>\n                <Row gutter={[20, 20]} style={{width:'inherit', background:'transparent'}}>                \n                {session.map((item,index)=>{\n                    return (\n                      <Col md={rows.length == 1 ? 24 : (rows.length == 2 ? 12 : 8)}>\n                      <div key={index}>\n                          <div style={{width:'100%', height:'100%', backgroundColor:'#3A3C41', borderRadius:'10px', display:'flex', flexDirection:'column', alignItems:'center', boxShadow: '0px 0px 20px 1px #202225',}}>\n                          <div style={{display:'flex', flexDirection:'row', marginTop:'10px', justifyContent:'center', alignItems:'center', marginBottom:'10px'}}>\n                            <div className={index+1 == 1 ? 'one': (index+1 == 2 ? 'two': 'three')}>{index + 1}</div>\n                            <div style={{color:'white', marginBottom:'10px', fontSize:'15px', marginTop:'10px', marginLeft:'10px', fontSize:'20px'}}>{item.username}\n                            {item.userId}\n                            </div>\n                          </div>\n                            <Row gutter={10} style={{width:'inherit', paddingBottom:'10px'}}>\n                              <Col md={24}>\n                              <div style={{display:'flex', flexDirection:'column', alignItems:'center'}}>\n                                <div style={{color:'#9BA6B2', fontSize:'20px'}}> \n                                  Detected Move\n                                </div>\n                                <div style={{fontSize:'30px', color:'white'}}>\n                                 {item.session.length ? item.session[item.session.length - 1].danceMove : '?'}\n                                </div>\n                                </div>\n                              </Col>  \n                              \n                            </Row>   \n                            \n                          </div>\n                      </div>\n                    </Col>\n                    )\n                })}\n                </Row>\n                <Row style={{marginTop:'20px'}}>\n                  <Col md={24}>\n                  <div style={{width:'100%', height:'100%', backgroundColor:'#3A3C41', borderRadius:'10px', display:'flex', flexDirection:'column', alignItems:'center', boxShadow: '0px 0px 20px 1px #202225', padding:'10px'}}>\n                      <div >\n                        Fatigue Check\n                      </div>\n                      {emg.length ? (Number(emg[emg.length-1].emg) > 3 ? <div className=\"tired\"><AiOutlineWarning style={{ filter: 'drop-shadow(1px 1px 20px red)', fontSize:'40px'}}/>Take a break!</div> : <div className=\"ok\"><AiOutlineLike style={{ filter: 'drop-shadow(1px 1px 20px white)', fontSize:'40px', color:'white', marginRight:'10px'}}/>Keep Going!</div> ) : <div style={{fontSize:'30px', color:'white'}}>?</div>}\n                      {emg.length ? (Number(emg[emg.length-1].emg) > 3 ? <div className=\"fatigue\">Your muscle fatigue level is high</div> : <div className=\"fatigue\">Your muscle fatigue level is normal</div> ) : <div style={{fontSize:'30px'}}>Get ready...</div>}\n                      {/* {emg.length ? (emg[emg.length-1] =='tired' ? <div className=\"tired\"><AiOutlineWarning style={{ filter: 'drop-shadow(1px 1px 20px red)', fontSize:'40px'}}/>Take a break!</div> : <div className=\"ok\"><AiOutlineLike style={{ filter: 'drop-shadow(1px 1px 20px white)', fontSize:'40px', color:'white', marginRight:'10px'}}/>Keep Going!</div> ) : 'Get ready ...'}\n                      {emg.length ? (emg[emg.length-1] =='tired' ? <div className=\"fatigue\">Your muscle fatigue level is high</div> : <div className=\"fatigue\">Your muscle fatigue level is normal</div> ) : 'Get ready ...'} */}\n                    </div>\n                  </Col>\n                </Row>\n                <Row gutter={[30]}  style={{marginTop:'20px'}}>\n                <Col md={12}>\n                  <div className='expectedPosition'>\n                      <div >\n                        Synchronisation Delay\n                      </div>\n                      <Row gutter={40} style={{margin:'0px', width:'100%'}}>\n                        <div style={{display:'flex', flexDirection:'row', alignItems:'center', justifyContent:'space-around', width:'inherit', background:'transparent'}}>\n                          \n                          {syncDelay.length ?  (syncDelay[syncDelay.length-1].sync == 0 ? \n                          <div className=\"perfectSync\">Perfect Sync</div> : (\n                            syncDelay[syncDelay.length-1].sync > 0 && syncDelay[syncDelay.length-1].sync <= 0.5 ? \n                            <div className=\"okSync\">Almost Perfect Sync</div> : (syncDelay[syncDelay.length-1].sync > 0.5 ? <div className=\"notSync\">Please Match Up!</div> : null)\n                            \n                          )) : <div style={{fontSize:'30px'}}>Get Ready...</div>}\n                          \n                          <div style={{display:'flex', flexDirection:'column', alignItems:'center'}}>\n                            Off By\n                            <div style={{display:'flex', flexDirection:'column',height:'100%', background:'transparent', position:'relative', color:'white'}}>\n                              <IoIosSync className=\"syncMove\"/>\n                              <div style={{position:'absolute', top: '50%', left:'50%', transform:'translate(-50%, -50%)',fontSize:'32px', fontWeight:'bold'}}>\n                                {syncDelay.length ? \n                                <div>{syncDelay[syncDelay.length-1].sync}s </div> \n                                : '?'}\n                                </div>\n                            </div>\n                          </div>\n                          </div>\n                      </Row>\n                          \n                    </div>\n                  </Col>\n                  <Col md={12}>\n                  <div className='detectedPosition'>\n                      <div style={{color:'white'}}>\n                          Detected Position\n                        </div>\n                        <Row gutter={[40]} style={{margin:'20px'}}>\n                          {rows.map((item, number) => \n                              <Col key={number}>\n                                {array.length ? null : <div className=\"blobempty\">?</div>}\n                                {session.map((item) => (item.session.length ? (item.session[item.session.length-1].position == number + 1 ?  \n                                <div className={`blob${(rows.findIndex(x => x.userId == item.userId) + 1) == 1 ? 'one' : (rows.findIndex(x => x.userId == item.userId) + 1) == 2 ? 'two' : 'three'}`}>{rows.findIndex(x => x.userId == item.userId) + 1}</div>\n                                  : null) : null))}\n                                 </Col>\n                          )}\n                        </Row>\n                    </div>\n                  </Col>\n                </Row>\n                <div>\n                </div>\n                <div style={{display:'flex', flexDirection:'row', justifyContent:'flex-end', width:'100%', background:'transparent'}}><Button type=\"primary\" style={{marginTop:'10px', marginRight:'10px'}} onClick={handleGetResults}>Get Results</Button></div>\n\n            </div>\n            : \n            null}\n            {select ? \n            <div>\n            <div>\n                <h3 style={{color:'white'}}>New Session</h3>\n            </div>\n            <Input name=\"name\" size=\"large\" \n            value={sessionName}\n            onChange={handleSessionNameChange}\n            placeholder=\"session name\" \n            style={{width:'100%', marginTop:'10px', borderRadius:'8px', border:'transparent', background:'#2f3136', marginBottom:'0px'}}\n            />\n            <div style={{borderRadius:'20px', overflow:'hidden',  boxShadow: '0px 0px 20px 1px #202225', marginTop:'20px', backgroundColor:'#3A3C41'}}>\n            <Spin spinning={loading} delay={500} size=\"large\">\n\n            <div style={{borderRadius:'20px', backgroundColor:'#3A3C41', width:'100%', height:'100%', marginTop:'20px', marginBottom:'20px'}}>\n\n            <div style={{display:'flex', alignItems:'center', marginTop:'10px', marginLeft:'20px'}}>\n                All Users <UserOutlined style={{marginLeft:'10px'}}/>\n            </div>\n            <Table \n                rowSelection ={{\n                    onSelect:(record) => {\n                    },\n                    onChange: (keys, record) => {\n                      setRows(record)\n                      console.log(record)\n                      setSession(record.map((item)=>({ username: item.username, userId: item.userId, userImage: item.image, session:[]})))\n                      console.log(session)\n                    }\n                }}\n                style={{margin:'10px'}}\n                pagination={false}\n                columns={columns} \n                dataSource={users} \n                rowKey='_id'\n                />\n            </div>\n\n            </Spin>\n            </div>\n            <div style={{display:'flex', flexDirection:'row', justifyContent:'flex-end', width:'100%', background:'transparent'}}><Button type=\"primary\" style={{marginTop:'10px', marginRight:'10px'}} onClick={startSessionHandler}>Start Session</Button></div>\n            </div>\n            : null}\n            {\n              stop ? \n              <div>\n              <Analytics stop={stop} start={startTime} end={endTime} rows={rows} session={session} emg={emg} syncDelay={syncDelay} sendPost={sendPost}/>\n                <div style={{display:'flex', flexDirection:'row', justifyContent:'flex-end', width:'100%', marginBottom:'0px', background:'transparent', height:'100%'}}><Button type=\"primary\" style={{marginTop:'20px', marginRight:'20px', marginBottom:'20px'}} onClick={endSessionHandler}>End Session</Button></div>\n              </div>\n              : \n              null\n            }\n            \n        </div>\n        </Spin>\n        </Modal>\n     );\n}\n \nexport default NewSession;","/Users/jingkangng/Documents/Y4S1/CG4002/dashboard/client/src/components/Session/Analytics.js",["210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248"],"import React, {useState, useEffect} from 'react';\nimport { Table, Avatar, Tag, Input, Spin, Row, Col, Button} from 'antd'\nimport {UserOutlined, SyncOutlined} from '@ant-design/icons';\nimport { AiOutlineWarning, AiOutlineLike, AiOutlineUser } from 'react-icons/ai';\nimport {IoIosSync} from 'react-icons/io'\nimport * as api from '../api/index'\nimport './styles.css'\nimport DoughnutChart from './DoughnutChart';\nimport SyncGraph from './SyncGraph';\nimport FatigueGraph from './FatigueGraph'\nimport moment from 'moment'\n\nconst Analytics = ({stop, rows, session, emg, syncDelay, start, end, sendPost, obj}) => {\n    const [evaluation, setEvaluation] = useState(null)\n    const [danceScore, setDanceScore] = useState(0)\n    const [moveChart, setMoveChart] = useState([])\n    const [syncDelayDisplay, setSyncDelayDisplay] = useState(0)\n    const [groupDanceScore, setGroupDanceScore] = useState([])\n    const [groupPositionScore, setGroupPositionScore] = useState([])\n\n    const [tired, setTired] = useState(null)\n    const [tiredDuration, setTiredDuration] = useState(null)\n    const [tiredDurationMinutes, setTiredDurationMinutes] = useState(null)\n    const [loading, setLoading] = useState(false)\n    const [object, setObject] = useState(null)\n\n    const calculateTired = () => {\n        for(let i = 0; i < emg.length; i ++){\n            if(emg[i].emg > 3){\n                setTired(emg[i].time)\n                calculateTiredDuration(emg[i].time)\n                break;\n            }\n        }\n    }\n\n    const calculateTiredDuration = (tiredTime) => {\n        let duration = 0\n        let start = moment(emg[0].time, 'h:mm:ss A')\n        let end = moment(tiredTime, 'h:mm:ss A')\n        duration = end.diff(start)\n        let f = moment.utc(duration).format(\"mm:ss\");\n        setTiredDuration(f)\n    }\n\n    const getEvaluation = async() => {\n        try {\n            await api.getEval().then(data => {\n              console.log(data.data.data)\n              setEvaluation(data.data.data)\n            })\n          } catch (error) {\n            alert(error)\n          }\n    }\n    const calculateSyncDelay = () => {\n        let count = 0;\n        for(let i = 0; i < syncDelay.length; i++){\n            // console.log(syncDelay[i].sync)\n            count += parseFloat(syncDelay[i].sync)\n            console.log(count)\n        }\n        \n        if(syncDelay.length != 0){\n            setSyncDelayDisplay((count/syncDelay.length).toFixed(1))\n        }\n    }\n    \n    const calculateIndividualDance = () => {\n        let userDance = []\n        let moveChartList = []\n\n        for(let i = 0; i < session.length; i += 1){\n            userDance.push({username: session[i].username, userId: session[i].userId, movePercent: '0%', positionPercent:'0%'})\n            moveChartList.push({username: session[i].username, userId: session[i].userId, dataMove: [{name: 'correct', value: 0}, {name: 'wrong', value: 0}], dataPosition: [{name: 'correct', value: 0}, {name: 'wrong', value: 0}]})\n        }\n        \n        let totalMoveScore = 0\n        let totalCorrectMoveScore = 0\n        let totalWrongMoveScore = 0\n\n        let totalPositionScore = 0\n        let totalCorrectPositionScore = 0\n        let totalWrongPositionScore = 0\n\n\n        let moveScore = 0\n        let moveTotal = 0\n        let wrongMoveScore = 0\n\n        for(let j = 0; j < session.length; j += 1){\n            moveScore = 0\n            moveTotal = 0\n            wrongMoveScore = 0\n            for(let i = 0; i < session[j].session.length; i++){\n                moveTotal += 1\n                totalMoveScore += 1\n                if(session[j].session[i].danceMove == evaluation.datas[i].danceMove){\n                    moveScore += 1\n                    totalCorrectMoveScore += 1\n                          \n                }\n                else{\n                    wrongMoveScore += 1\n                    totalWrongMoveScore += 1\n                }\n\n                // console.log('wrongscore', wrongMoveScore)\n                // console.log('move', moveScore)\n                // console.log('outside movetotal',moveTotal)\n            }           \n            userDance[j].movePercent = ((moveScore/moveTotal)*100).toFixed(1)              \n            moveChartList[j].dataMove[0].value = parseFloat(((moveScore/moveTotal)*100).toFixed(1))\n            moveChartList[j].dataMove[1].value = parseFloat(((wrongMoveScore/moveTotal)*100).toFixed(1))\n        }\n        \n        let danceScore = 0\n        let danceTotal = 0\n        let wrongDanceScore = 0\n        for(let j = 0; j < session.length; j += 1){\n            danceScore = 0\n            danceTotal = 0\n            wrongDanceScore = 0\n            for(let i = 0; i < session[j].session.length; i++){\n                    danceTotal += 1\n                    totalPositionScore += 1\n                    let temp = evaluation.datas[i].position.split(',')\n                    if(temp.indexOf(session[j].session[i].position) + 1 == session[j].session[i].position){\n                        danceScore += 1\n                        totalCorrectPositionScore += 1\n                    }\n                    else{\n                        wrongDanceScore += 1\n                        totalWrongPositionScore += 1\n                        moveChartList[j].dataPosition[1].value = parseFloat((wrongDanceScore).toFixed(1))\n                    }\n                }\n            moveChartList[j].dataPosition[1].value = parseFloat(((wrongDanceScore/danceTotal)*100).toFixed(1))\n            userDance[j].positionPercent = ((danceScore/danceTotal)*100).toFixed(1)\n            moveChartList[j].dataPosition[0].value = parseFloat(((danceScore/danceTotal)*100).toFixed(1))\n        }\n        setMoveChart(moveChartList)\n        setDanceScore(userDance)\n\n\n        // Group Scores\n        let totalWrongMoveScorePercentage = parseFloat(((totalWrongMoveScore/totalMoveScore)*100).toFixed(1))\n        let totalCorrectMoveScorePercentage = parseFloat(((totalCorrectMoveScore/totalMoveScore)*100).toFixed(1))\n\n        let totalWrongPositionScorePercentage = parseFloat(((totalWrongPositionScore/totalPositionScore)*100).toFixed(1))\n        let totalCorrectPositionScorePercentage = parseFloat(((totalCorrectPositionScore/totalPositionScore)*100).toFixed(1))\n\n        setGroupDanceScore([{name: 'correct', value: totalCorrectMoveScorePercentage},{name: 'wrong', value: totalWrongMoveScorePercentage}])\n        setGroupPositionScore([{name: 'correct', value: totalCorrectPositionScorePercentage},{name: 'wrong', value: totalWrongPositionScorePercentage}])\n    }\n\n    const handleSubmit = async() => {\n        console.log(object)\n        alert(object)\n        // var finalObj = obj\n        // finalObj['groupDanceScore'] = groupDanceScore\n        // finalObj['groupPositionScore'] = groupPositionScore\n        // finalObj['individualDanceScore'] = danceScore\n        // finalObj['individualMoveScore'] = moveChart\n        // console.log(finalObj)\n        // alert(finalObj)\n        // try {\n        //     await api.postSession(finalObj).then((data)=>{\n        //         // alert(data)\n        //         console.log(data)\n        //       //   setPostLoading(false)\n        //     })\n        // } catch (error) {\n        //     console.log(error)\n        // }\n        \n    }\n\n    useEffect(() => {\n        if(sendPost == true){\n            alert(sendPost)\n            // alert('hihi')\n        }\n    }, [sendPost])\n\n\n\n    \n\n    useEffect(()=>{\n        if(evaluation != null){\n            calculateIndividualDance()\n        }\n    },[evaluation])\n\n    useEffect(() => {\n        if(syncDelay != null){\n            calculateSyncDelay()\n        }\n    }, [syncDelay])\n\n    useEffect(() => {\n       getEvaluation() \n    }, [stop])\n\n    useEffect(() => {\n       if(emg.length > 0){\n           calculateTired()\n       }\n    }, [emg])\n\n    return ( \n        <div style={{width:'100%', background:'transparent'}}>\n            {/* {alert(syncDelayDisplay)} */}\n            <div style={{fontSize:'30px', color:'white', marginBottom:'10px', fontWeight:'bold'}}>Analytics</div>\n            {/* individual  */}\n            <div style={{fontSize:'25px', color:'white', marginBottom:'10px'}}>Individual Analytics</div>\n            <Row gutter={[20, 20]} style={{width:'inherit', background:'transparent'}}>                \n                {danceScore ? danceScore.map((item,index)=>{\n                    return (\n                      <Col md={rows.length == 1 ? 24 : (rows.length == 2 ? 12 : 8)}>\n                      <div key={index}>\n                          <div style={{width:'100%', height:'100%', backgroundColor:'#3A3C41', borderRadius:'10px', display:'flex', flexDirection:'column', alignItems:'center', boxShadow: '0px 0px 20px 1px #202225',}}>\n                          <div style={{display:'flex', flexDirection:'row', marginTop:'10px', justifyContent:'center', alignItems:'center', marginBottom:'10px'}}>\n                            <div className={index+1 == 1 ? 'one': (index+1 == 2 ? 'two': 'three')}>{index + 1}</div>\n                            <div style={{color:'white', marginBottom:'10px', fontSize:'15px', marginTop:'10px', marginLeft:'10px', fontSize:'20px'}}>{item.username}\n                            {item.userId}\n                            </div>\n                          </div>\n                            <Row gutter={10} style={{width:'inherit', paddingBottom:'10px'}}>\n                                <Col md={24}>\n                                <div style={{display:'flex', flexDirection:'column', alignItems:'center'}}>\n                                    <div style={{color:'#9BA6B2', fontSize:'20px'}}> \n                                    Move Analytics\n                                    </div>\n                                    <div style={{fontSize:'15px', color:'white', position:'relative', width:'100%', height:'100%', background:'transparent', alignItems:'center', display:'flex', flexDirection:'column'}}>\n                                    <div style={{position:'absolute', top:'50%', left:'50%', transform:'translate(-50%, -50%', display:'flex', flexDirection:'column', alignItems:'center', fontWeight:'bold', justifyContent:'center', width:'100%'}}>\n                                        <div>{item.movePercent}%</div>\n                                        <div>Correct</div>\n                                        {/* TODO */}\n                                        {item.movePercent == 100.0 ? <div className=\"perfect\">Perfect</div> : \n                                        (item.movePercent < 100.0 && item.movePercent >= 70.0 ? <div className=\"excellent\">Excellent</div>:    \n                                        (item.movePercent < 70.0 && item.movePercent >= 50.0 ? <div className=\"average\">Average</div> : \n                                        (item.movePercent < 50.0 ? <div className=\"poor\">Poor</div> : null)))\n                                        } \n                                    </div>\n                                    <DoughnutChart data={moveChart[moveChart.findIndex(x=> x.userId == item.userId)].dataMove}/>\n                                    \n                                    </div>\n                                </div>\n                              </Col>  \n                            </Row>  \n                            <Row gutter={10} style={{width:'inherit', paddingBottom:'10px'}}>\n                                <Col md={24}>\n                                <div style={{display:'flex', flexDirection:'column', alignItems:'center'}}>\n                                    <div style={{color:'#9BA6B2', fontSize:'20px'}}> \n                                    Position Analytics\n                                    </div>\n                                    <div style={{fontSize:'15px', color:'white', position:'relative', width:'100%', height:'100%', background:'transparent', alignItems:'center', display:'flex', flexDirection:'column'}}>\n                                    <div style={{position:'absolute', top:'50%', left:'50%', transform:'translate(-50%, -50%', display:'flex', flexDirection:'column', alignItems:'center', fontWeight:'bold', justifyContent:'center', width:'100%'}}>\n                                        <div>{item.positionPercent}%</div>\n                                        <div>Correct</div>\n                                        {item.positionPercent == 100.0 ? <div className=\"perfect\">Perfect</div> : \n                                        (item.positionPercent < 100.0 && item.positionPercent >= 70.0 ? <div className=\"excellent\">Excellent</div>:    \n                                        (item.positionPercent < 70.0 && item.positionPercent >= 50.0 ? <div className=\"average\">Average</div> : \n                                        (item.positionPercent < 50.0 ? <div className=\"poor\">Poor</div> : null)))\n                                        } \n                                    </div>\n                                    <DoughnutChart data={moveChart[moveChart.findIndex(x=> x.userId == item.userId)].dataPosition}/>\n    \n                                    </div>\n                                   \n                                </div>\n                              </Col>  \n                            </Row>   \n                            \n                          </div>\n                      </div>\n                    </Col>\n                    )\n                }): \n                <Row gutter={[20, 20]} style={{width:'inherit', background:'transparent'}}>     \n                    {session.map((item, index)=>(\n                         <Col md={rows.length == 1 ? 24 : (rows.length == 2 ? 12 : 8)}>\n                         <div key={index}>\n                             <div style={{width:'inherit', height:'200px', backgroundColor:'#3A3C41', borderRadius:'10px', display:'flex', flexDirection:'column', alignItems:'center', boxShadow: '0px 0px 20px 1px #202225',}}>\n                                 <div>Loading</div>\n                             </div>\n                         </div>\n                     </Col>\n                    ))}           \n                </Row>\n                }\n\n                {/* Group */}\n                <div style={{fontSize:'25px', color:'white', marginBottom:'10px', marginLeft:'10px'}}>Group Analytics</div>\n\n                <Col md={24}>\n\n                    <div style={{width:'100%', height:'100%', backgroundColor:'#3A3C41', borderRadius:'10px', display:'flex', flexDirection:'row', alignItems:'center', boxShadow: '0px 0px 20px 1px #202225', justifyContent:'space-evenly', padding:'10px'}}>                                    \n\n                        <div style={{height:'100%', width:'100%', display:'flex', flexDirection:'column', alignItems:'center'}}>\n                            <div style={{color:'#9BA6B2', fontSize:'20px'}}> \n                                    Move Analytics\n                            </div>\n                            {groupDanceScore.length ? \n                            <div style={{fontSize:'15px', color:'white', position:'relative', width:'100%', height:'100%', background:'transparent', alignItems:'center', display:'flex', flexDirection:'column'}}>\n                                    <div style={{position:'absolute', top:'50%', left:'50%', transform:'translate(-50%, -50%', display:'flex', flexDirection:'column', alignItems:'center', fontWeight:'bold', justifyContent:'center', width:'100%'}}>\n                                        <div>{groupDanceScore[0].value}%</div>\n                                        <div>Correct</div>\n                                        {groupDanceScore[0].value == 100.0 ? <div className=\"perfect\">Perfect</div> : \n                                        (groupDanceScore[0].value < 100.0 && groupDanceScore[0].value >= 70.0 ? <div className=\"excellent\">Excellent</div>:    \n                                        (groupDanceScore[0].value < 70.0 && groupDanceScore[0].value >= 50.0 ? <div className=\"average\">Average</div> : \n                                        (groupDanceScore[0].value < 50.0 ? <div className=\"poor\">Poor</div> : null)))\n                                        } \n                                    </div>\n                                    <DoughnutChart data={groupDanceScore}/>\n                            </div>\n                            : <div>?</div>}\n                        </div>\n                        <div style={{height:'100%', width:'100%', display:'flex', flexDirection:'column', alignItems:'center'}}>\n                            <div style={{color:'#9BA6B2', fontSize:'20px'}}> \n                                    Position Analytics\n                            </div>\n                            {groupPositionScore.length ? \n                            <div style={{fontSize:'15px', color:'white', position:'relative', width:'100%', height:'100%', background:'transparent', alignItems:'center', display:'flex', flexDirection:'column'}}>\n                                    <div style={{position:'absolute', top:'50%', left:'50%', transform:'translate(-50%, -50%', display:'flex', flexDirection:'column', alignItems:'center', fontWeight:'bold', justifyContent:'center', width:'100%'}}>\n                                        <div>{groupPositionScore[0].value}%</div>\n                                        <div>Correct</div>\n                                        {groupPositionScore[0].value == 100.0 ? <div className=\"perfect\">Perfect</div> : \n                                        (groupPositionScore[0].value < 100.0 && groupPositionScore[0].value >= 70.0 ? <div className=\"excellent\">Excellent</div>:    \n                                        (groupPositionScore[0].value < 70.0 && groupPositionScore[0].value >= 50.0 ? <div className=\"average\">Average</div> : \n                                        (groupPositionScore[0].value < 50.0 ? <div className=\"poor\">Poor</div> : null)))\n                                        } \n                                    </div>\n                                    <DoughnutChart data={groupPositionScore}/>\n    \n                            </div>\n                            :\n                            <div>?</div>}\n                        </div>\n                    </div>\n                </Col>\n\n\n                {/* emg */}\n                <Col md={24}>\n                    <div style={{width:'100%', height:'100%', backgroundColor:'#3A3C41', borderRadius:'10px', display:'flex', flexDirection:'row', alignItems:'center', boxShadow: '0px 0px 20px 1px #202225', justifyContent:'space-evenly', padding:'10px'}}>\n                        <div style={{height:'100%', width:'100%', display:'flex', flexDirection:'column', alignItems:'center'}}>\n                            <div style={{color:'#9BA6B2', fontSize:'20px', marginBottom:'30px'}}> \n                                Fatigue Level\n                            </div>\n                            <div style={{display:'flex', flexDirection:'row', justifyContent:'space-evenly', width:'100%', marginTop:'10px'}}>\n                                <div style={{height:'100%', width:'100%', display:'flex', flexDirection:'column', alignItems:'center'}}>\n                                    <FatigueGraph emgData={emg}/>\n                                </div>\n                                {tired != null ?\n                                <div style={{height:'100%', width:'100%', display:'flex', flexDirection:'column', alignItems:'center'}}>\n                                You Got Tired At Around ...\n                                <div style={{height:'100%', width:'100%', background:'transparent', fontWeight:'bold', color:'white', display:'flex', alignItems:'center', justifyContent:'center', fontSize:'50px'}}>{tired}</div>\n                                <div style={{marginTop:'10px', fontSize:'30px', color:'white'}}>{tiredDuration} minutes</div>\n                                <div>from the start</div>\n                                </div>\n                                : \n                                <div style={{fontSize:'30px', color:'white', height:'100%', width:'100%', display:'flex', flexDirection:'row', alignItems:'center', justifyContent:'center'}}>\n                                Fatigue Level did not reach Critical Level\n                                </div>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </Col>\n\n                <Col md={24}>\n                    <div style={{width:'100%', height:'100%', backgroundColor:'#3A3C41', borderRadius:'10px', display:'flex', flexDirection:'column', alignItems:'center', boxShadow: '0px 0px 20px 1px #202225', justifyContent:'space-evenly', padding:'10px'}}>\n                        <div style={{color:'#9BA6B2', fontSize:'20px'}}> \n                            Sync Delay\n                        </div>\n                        <div style={{display:'flex', flexDirection:'row', width:'100%', justifyContent:'space-evenly'}}>\n                        <div style={{height:'100%', width:'100%', display:'flex', flexDirection:'column', alignItems:'center'}}>\n                            <SyncGraph syncData={syncDelay}/>\n                        </div>\n                        <div style={{height:'100%', width:'100%', display:'flex', flexDirection:'column', alignItems:'center'}}>\n                            \n                            <div style={{display:'flex', flexDirection:'column', alignItems:'center', justifyContent:'space-around', width:'inherit', background:'transparent', width:'100%'}}>\n                            \n                            \n                                \n                            <div style={{display:'flex', flexDirection:'column', alignItems:'center'}}>\n                                Average Sync Delay Off By\n                                <div style={{display:'flex', flexDirection:'column',height:'100%', background:'transparent', position:'relative', color:'white'}}>\n                                <IoIosSync className=\"syncMoveBig\"/>\n                                <div style={{position:'absolute', top: '50%', left:'50%', transform:'translate(-50%, -50%)',fontSize:'32px', fontWeight:'bold'}}>\n                                    {syncDelayDisplay ? `${syncDelayDisplay}s` : '?'}\n                                    </div>\n                                </div>\n                            </div>\n                            <div style={{marginTop:'20px'}}>\n                                {syncDelayDisplay ?  (syncDelayDisplay == 0 ? \n                                <div className=\"perfectSync\">Perfect Sync</div> : (\n                                    syncDelayDisplay > 0 && syncDelayDisplay <= 0.5 ? \n                                    <div className=\"okSync\">Almost Perfect Sync</div> : (syncDelayDisplay > 0.5 ? <div className=\"notSync\">Please Match Up!</div> : null)\n                                    \n                                )) : <div style={{fontSize:'30px'}}>Get Ready...</div>}\n                            </div>\n                            </div>\n                        </div>\n                        </div>\n                         \n                    </div>\n                    \n                </Col>\n            </Row>\n                                    \n        </div>\n     );\n}\n \nexport default Analytics\n\n","/Users/jingkangng/Documents/Y4S1/CG4002/dashboard/client/src/components/Session/DoughnutChart.js",["249","250","251"],"import React, { useState, useEffect } from 'react';\nimport { PieChart, Pie, Sector, Cell, ResponsiveContainer, Tooltip } from 'recharts';\n\nconst COLORS = ['#5965EA', '#FF6D98'];\n\n// const data = [\n//   { name: 'A1', value: 100 },\n//   { name: 'A2', value: 300 },\n// ];\nconst formatTooltip = value => (`${value} %`);\n\n\nconst Chart = ({data}) => {\n    // const [data, setData] = useState()\n    return ( \n        <div style={{height:'250px', width:'300px'}}>\n            {console.log(data)}\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <PieChart \n        >\n        <Tooltip formatter={formatTooltip}/>\n          {/* <Pie data={data01} dataKey=\"value\" cx=\"50%\" cy=\"50%\" outerRadius={60} fill=\"#8884d8\" /> */}\n          <Pie data={data} dataKey=\"value\"  innerRadius={70} outerRadius={90} label>\n          {data ? data.map((entry, index) => (\n              <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n            )) : <div>?</div>}\n          </Pie>\n        </PieChart>\n      </ResponsiveContainer>\n      </div>\n     );\n}\n \nexport default Chart;\n\n// export default class Example extends PureComponent {\n//   static demoUrl = 'https://codesandbox.io/s/pie-chart-of-two-levels-gor24';\n\n//   render() {\n//     return (\n        \n//     );\n//   }\n// }\n","/Users/jingkangng/Documents/Y4S1/CG4002/dashboard/client/src/components/Session/SyncGraph.js",["252","253","254","255","256","257"],"import React, {useState, useEffect} from \"react\";\nimport { render } from \"react-dom\";\n\nimport { LineChart, Line, XAxis, YAxis, ReferenceLine, AreaChart, Area, Tooltip} from \"recharts\";\n\nconst styles = {\n  fontFamily: \"sans-serif\",\n  textAlign: \"center\"\n};\n\nconst data = [];\nconst launchDate = 2004;\n\nconst rand = 300;\nfor (let i = 0; i < 7; i++) {\n  const year = 2000 + i;\n  const value = Math.random() * (rand + 50) + 100;\n  let d = {\n    year: year,\n    value: value\n  };\n\n  data.push(d);\n}\n\n// change type to see that the overlap might not be appropriate towards the\n// end of the shorter chart\nconst type = \"monotone\";\n\n// calculate percentage for launchDate - index = 4, total = 7\nconst percentage = 100 - ((7 - 4 - 1) / (7 - 1)) * 100;\n\nconst SyncGraph = ({syncData}) => {\n    const [percent, setPercent] = useState(0)\n\n    const calculatePercentage = () => {\n        let maximum = 0\n        for(let i = 0; i < syncData.length; i ++){\n            maximum = Math.max(syncData[i].sync, maximum)\n        }\n        if(maximum > 0.75){\n            setPercent((maximum - 0.75)/maximum * 100)\n\n        }\n    }\n\n\n    useEffect(() => {\n        if(syncData.length){\n            calculatePercentage()\n        }\n        \n    }, [syncData])\n    return ( \n        <div style={styles}>\n            {/* {alert(percent)} */}\n            {console.log(syncData)}\n            <AreaChart\n            width={500}\n            height={300}\n            data={syncData}\n            margin={{ top: 5, right: 20, bottom: 5, left: 0 }}\n            >\n            <defs>\n            <linearGradient id=\"gradient\" x1=\"0\" y1=\"1\" x2=\"0\" y2=\"0\">\n                <stop offset={`${100-percentage}%`} stopColor=\"#5A65EA\"  />\n                <stop offset={`${percentage}%`} stopColor=\"#ff6d98\" />\n            </linearGradient>\n                \n            </defs>\n            <Tooltip />\n            <ReferenceLine y={0.75} label={<div style={{color:'white'}}>Exceed Threshold</div>} />\n            {/* <Area type={type} dataKey=\"sync\" fill=\"#5A65EA\" stroke=\"#5A65EA\"/> */}\n            <Area type={type} dataKey=\"sync\" fill=\"url(#gradient)\" stroke=\"url(#gradient)\"/>\n            <XAxis dataKey=\"time\" />\n            <YAxis dataKey=\"sync\"/>\n            </AreaChart>\n        </div>\n     );\n}\n \nexport default SyncGraph;\n","/Users/jingkangng/Documents/Y4S1/CG4002/dashboard/client/src/components/Session/FatigueGraph.js",["258","259","260","261"],"import React, {useState, useEffect} from \"react\";\nimport { LineChart, Line, XAxis, YAxis, ReferenceLine, AreaChart, Area, Tooltip} from \"recharts\";\n\nconst styles = {\n  fontFamily: \"sans-serif\",\n  textAlign: \"center\"\n};\n\n// change type to see that the overlap might not be appropriate towards the\n// end of the shorter chart\nconst type = \"monotone\";\n\n// calculate percentage for launchDate - index = 4, total = 7\n// const percentage = 90.1;\n\n\n\nconst FatigueGraph = ({emgData}) => {\n    const [percentage, setPercentage] = useState(0)\n    // const [tired, setTired] = useState(0)\n    const [tiredTime, setTiredTime] = useState(null)\n    const [startTime, setStartTime] = useState(null)\n    // const [tiredTimeDuration, setTiredTimeDuration] = useState(null)\n\n    const calculatePercentage = () => {\n        let maximum = 0\n        for(let i = 0; i < emgData.length; i ++){\n            maximum = Math.max(emgData[i].emg, maximum)\n        }\n        if(maximum > 3){\n            setPercentage((maximum - 3)/maximum * 100)\n\n        }\n    }\n\n    const findTiredTime = () => {\n        for(let i = 0; i < emgData.length; i++){\n            if( emgData[i].emg > 3){\n                setTiredTime(emgData[i].time)\n                // setTiredTimeDuration(emgData[i].time - startTime)\n                calculatePercentage()\n                break;\n            }\n        }\n    }\n\n    useEffect(() => {\n        if(emgData.length > 0){\n            setStartTime(emgData[0].time)\n        }\n    }, [emgData])\n\n    useEffect(() => {\n        if(startTime != null){\n            findTiredTime()\n        }\n       \n    }, [startTime])\n\n    return ( \n        <div style={styles}>\n            {console.log(emgData)}\n            {/* {alert(percentage)} */}\n            <AreaChart\n            width={500}\n            height={300}\n            data={emgData}\n            margin={{ top: 5, right: 20, bottom: 5, left: 0 }}\n            >\n            <defs>\n            <linearGradient id=\"gradient\" x1=\"0\" y1=\"1\" x2=\"0\" y2=\"0\">\n                <stop offset={`${100-percentage}%`} stopColor=\"#5A65EA\"  />\n                <stop offset={`${percentage}%`} stopColor=\"#ff6d98\" />\n            </linearGradient>\n                \n            </defs>\n            <Tooltip />\n            <Area type={type} dataKey=\"emg\" fill=\"url(#gradient)\" stroke=\"url(#gradient)\" strokeWidth={3}/>\n            <XAxis dataKey=\"time\" />\n            <YAxis dataKey=\"emg\"/>\n            {/* <ReferenceLine x={tiredTime} label={<div style={{color:'white'}}>{tiredTime}</div>} /> */}\n            {/* <ReferenceLine x={tiredTime}  */}\n            <ReferenceLine y={3} label={<div style={{color:'white'}}>Fatigue</div>} />\n            </AreaChart>\n        </div>\n     );\n}\n \nexport default FatigueGraph;\n",{"ruleId":"262","replacedBy":"263"},{"ruleId":"264","replacedBy":"265"},{"ruleId":"266","severity":1,"message":"267","line":11,"column":8,"nodeType":"268","messageId":"269","endLine":11,"endColumn":16},{"ruleId":"266","severity":1,"message":"270","line":2,"column":48,"nodeType":"268","messageId":"269","endLine":2,"endColumn":56},{"ruleId":"271","severity":1,"message":"272","line":35,"column":18,"nodeType":"273","messageId":"274","endLine":35,"endColumn":20},{"ruleId":"275","severity":1,"message":"276","line":64,"column":8,"nodeType":"277","endLine":64,"endColumn":10,"suggestions":"278"},{"ruleId":"279","severity":1,"message":"280","line":78,"column":25,"nodeType":"281","endLine":78,"endColumn":77},{"ruleId":"271","severity":1,"message":"272","line":85,"column":64,"nodeType":"273","messageId":"274","endLine":85,"endColumn":66},{"ruleId":"271","severity":1,"message":"272","line":103,"column":44,"nodeType":"273","messageId":"274","endLine":103,"endColumn":46},{"ruleId":"271","severity":1,"message":"272","line":103,"column":93,"nodeType":"273","messageId":"274","endLine":103,"endColumn":95},{"ruleId":"271","severity":1,"message":"272","line":103,"column":136,"nodeType":"273","messageId":"274","endLine":103,"endColumn":138},{"ruleId":"266","severity":1,"message":"282","line":4,"column":30,"nodeType":"268","messageId":"269","endLine":4,"endColumn":43},{"ruleId":"266","severity":1,"message":"283","line":6,"column":10,"nodeType":"268","messageId":"269","endLine":6,"endColumn":22},{"ruleId":"266","severity":1,"message":"284","line":7,"column":9,"nodeType":"268","messageId":"269","endLine":7,"endColumn":11},{"ruleId":"271","severity":1,"message":"272","line":75,"column":63,"nodeType":"273","messageId":"274","endLine":75,"endColumn":65},{"ruleId":"285","severity":1,"message":"286","line":85,"column":17,"nodeType":"268","messageId":"287","endLine":85,"endColumn":18},{"ruleId":"266","severity":1,"message":"288","line":105,"column":11,"nodeType":"268","messageId":"269","endLine":105,"endColumn":37},{"ruleId":"275","severity":1,"message":"289","line":118,"column":8,"nodeType":"277","endLine":118,"endColumn":18,"suggestions":"290"},{"ruleId":"266","severity":1,"message":"291","line":1,"column":16,"nodeType":"268","messageId":"269","endLine":1,"endColumn":24},{"ruleId":"266","severity":1,"message":"292","line":2,"column":55,"nodeType":"268","messageId":"269","endLine":2,"endColumn":70},{"ruleId":"266","severity":1,"message":"293","line":3,"column":22,"nodeType":"268","messageId":"269","endLine":3,"endColumn":27},{"ruleId":"266","severity":1,"message":"294","line":3,"column":66,"nodeType":"268","messageId":"269","endLine":3,"endColumn":72},{"ruleId":"266","severity":1,"message":"295","line":3,"column":74,"nodeType":"268","messageId":"269","endLine":3,"endColumn":81},{"ruleId":"266","severity":1,"message":"296","line":4,"column":26,"nodeType":"268","messageId":"269","endLine":4,"endColumn":38},{"ruleId":"266","severity":1,"message":"297","line":7,"column":8,"nodeType":"268","messageId":"269","endLine":7,"endColumn":15},{"ruleId":"266","severity":1,"message":"298","line":10,"column":13,"nodeType":"268","messageId":"269","endLine":10,"endColumn":18},{"ruleId":"266","severity":1,"message":"284","line":11,"column":9,"nodeType":"268","messageId":"269","endLine":11,"endColumn":11},{"ruleId":"266","severity":1,"message":"299","line":16,"column":9,"nodeType":"268","messageId":"269","endLine":16,"endColumn":17},{"ruleId":"266","severity":1,"message":"300","line":17,"column":10,"nodeType":"268","messageId":"269","endLine":17,"endColumn":21},{"ruleId":"271","severity":1,"message":"272","line":38,"column":32,"nodeType":"273","messageId":"274","endLine":38,"endColumn":34},{"ruleId":"271","severity":1,"message":"272","line":38,"column":69,"nodeType":"273","messageId":"274","endLine":38,"endColumn":71},{"ruleId":"266","severity":1,"message":"301","line":69,"column":12,"nodeType":"268","messageId":"269","endLine":69,"endColumn":26},{"ruleId":"266","severity":1,"message":"302","line":70,"column":12,"nodeType":"268","messageId":"269","endLine":70,"endColumn":24},{"ruleId":"266","severity":1,"message":"303","line":70,"column":26,"nodeType":"268","messageId":"269","endLine":70,"endColumn":41},{"ruleId":"266","severity":1,"message":"304","line":71,"column":12,"nodeType":"268","messageId":"269","endLine":71,"endColumn":20},{"ruleId":"266","severity":1,"message":"305","line":71,"column":22,"nodeType":"268","messageId":"269","endLine":71,"endColumn":33},{"ruleId":"266","severity":1,"message":"306","line":74,"column":12,"nodeType":"268","messageId":"269","endLine":74,"endColumn":17},{"ruleId":"266","severity":1,"message":"307","line":74,"column":19,"nodeType":"268","messageId":"269","endLine":74,"endColumn":27},{"ruleId":"266","severity":1,"message":"308","line":76,"column":12,"nodeType":"268","messageId":"269","endLine":76,"endColumn":19},{"ruleId":"266","severity":1,"message":"309","line":77,"column":14,"nodeType":"268","messageId":"269","endLine":77,"endColumn":21},{"ruleId":"266","severity":1,"message":"310","line":80,"column":14,"nodeType":"268","messageId":"269","endLine":80,"endColumn":20},{"ruleId":"266","severity":1,"message":"311","line":83,"column":14,"nodeType":"268","messageId":"269","endLine":83,"endColumn":30},{"ruleId":"275","severity":1,"message":"276","line":196,"column":7,"nodeType":"277","endLine":196,"endColumn":9,"suggestions":"312"},{"ruleId":"271","severity":1,"message":"272","line":211,"column":63,"nodeType":"273","messageId":"274","endLine":211,"endColumn":65},{"ruleId":"271","severity":1,"message":"272","line":211,"column":117,"nodeType":"273","messageId":"274","endLine":211,"endColumn":119},{"ruleId":"279","severity":1,"message":"280","line":224,"column":42,"nodeType":"281","endLine":224,"endColumn":130},{"ruleId":"266","severity":1,"message":"313","line":2,"column":51,"nodeType":"268","messageId":"269","endLine":2,"endColumn":54},{"ruleId":"266","severity":1,"message":"314","line":2,"column":56,"nodeType":"268","messageId":"269","endLine":2,"endColumn":59},{"ruleId":"266","severity":1,"message":"315","line":4,"column":10,"nodeType":"268","messageId":"269","endLine":4,"endColumn":22},{"ruleId":"266","severity":1,"message":"316","line":4,"column":24,"nodeType":"268","messageId":"269","endLine":4,"endColumn":41},{"ruleId":"266","severity":1,"message":"283","line":5,"column":10,"nodeType":"268","messageId":"269","endLine":5,"endColumn":22},{"ruleId":"266","severity":1,"message":"317","line":5,"column":40,"nodeType":"268","messageId":"269","endLine":5,"endColumn":47},{"ruleId":"266","severity":1,"message":"318","line":6,"column":10,"nodeType":"268","messageId":"269","endLine":6,"endColumn":23},{"ruleId":"266","severity":1,"message":"319","line":6,"column":25,"nodeType":"268","messageId":"269","endLine":6,"endColumn":37},{"ruleId":"266","severity":1,"message":"298","line":9,"column":13,"nodeType":"268","messageId":"269","endLine":9,"endColumn":18},{"ruleId":"320","severity":1,"message":"321","line":24,"column":23,"nodeType":"281","endLine":24,"endColumn":50},{"ruleId":"320","severity":1,"message":"321","line":77,"column":11,"nodeType":"281","endLine":77,"endColumn":49},{"ruleId":"266","severity":1,"message":"322","line":84,"column":12,"nodeType":"268","messageId":"269","endLine":84,"endColumn":19},{"ruleId":"266","severity":1,"message":"323","line":84,"column":21,"nodeType":"268","messageId":"269","endLine":84,"endColumn":31},{"ruleId":"266","severity":1,"message":"324","line":85,"column":27,"nodeType":"268","messageId":"269","endLine":85,"endColumn":43},{"ruleId":"266","severity":1,"message":"325","line":96,"column":12,"nodeType":"268","messageId":"269","endLine":96,"endColumn":30},{"ruleId":"266","severity":1,"message":"326","line":1,"column":26,"nodeType":"268","messageId":"269","endLine":1,"endColumn":35},{"ruleId":"266","severity":1,"message":"327","line":6,"column":13,"nodeType":"268","messageId":"269","endLine":6,"endColumn":16},{"ruleId":"271","severity":1,"message":"328","line":46,"column":33,"nodeType":"273","messageId":"274","endLine":46,"endColumn":35},{"ruleId":"271","severity":1,"message":"272","line":74,"column":17,"nodeType":"273","messageId":"274","endLine":74,"endColumn":19},{"ruleId":"271","severity":1,"message":"272","line":81,"column":30,"nodeType":"273","messageId":"274","endLine":81,"endColumn":32},{"ruleId":"279","severity":1,"message":"280","line":86,"column":29,"nodeType":"281","endLine":86,"endColumn":79},{"ruleId":"271","severity":1,"message":"272","line":99,"column":35,"nodeType":"273","messageId":"274","endLine":99,"endColumn":37},{"ruleId":"271","severity":1,"message":"272","line":117,"column":35,"nodeType":"273","messageId":"274","endLine":117,"endColumn":37},{"ruleId":"271","severity":1,"message":"272","line":127,"column":209,"nodeType":"273","messageId":"274","endLine":127,"endColumn":211},{"ruleId":"271","severity":1,"message":"272","line":132,"column":27,"nodeType":"273","messageId":"274","endLine":132,"endColumn":29},{"ruleId":"320","severity":1,"message":"321","line":132,"column":65,"nodeType":"281","endLine":132,"endColumn":89},{"ruleId":"320","severity":1,"message":"321","line":132,"column":137,"nodeType":"281","endLine":132,"endColumn":161},{"ruleId":"266","severity":1,"message":"329","line":3,"column":23,"nodeType":"268","messageId":"269","endLine":3,"endColumn":35},{"ruleId":"266","severity":1,"message":"330","line":4,"column":43,"nodeType":"268","messageId":"269","endLine":4,"endColumn":56},{"ruleId":"271","severity":1,"message":"272","line":33,"column":32,"nodeType":"273","messageId":"274","endLine":33,"endColumn":34},{"ruleId":"271","severity":1,"message":"272","line":33,"column":69,"nodeType":"273","messageId":"274","endLine":33,"endColumn":71},{"ruleId":"271","severity":1,"message":"272","line":75,"column":20,"nodeType":"273","messageId":"274","endLine":75,"endColumn":22},{"ruleId":"271","severity":1,"message":"272","line":78,"column":25,"nodeType":"273","messageId":"274","endLine":78,"endColumn":27},{"ruleId":"271","severity":1,"message":"272","line":132,"column":46,"nodeType":"273","messageId":"274","endLine":132,"endColumn":48},{"ruleId":"271","severity":1,"message":"272","line":158,"column":67,"nodeType":"273","messageId":"274","endLine":158,"endColumn":69},{"ruleId":"275","severity":1,"message":"331","line":292,"column":8,"nodeType":"277","endLine":292,"endColumn":20,"suggestions":"332"},{"ruleId":"271","severity":1,"message":"272","line":302,"column":28,"nodeType":"273","messageId":"274","endLine":302,"endColumn":30},{"ruleId":"271","severity":1,"message":"272","line":313,"column":20,"nodeType":"273","messageId":"274","endLine":313,"endColumn":22},{"ruleId":"271","severity":1,"message":"272","line":321,"column":62,"nodeType":"273","messageId":"274","endLine":321,"endColumn":64},{"ruleId":"271","severity":1,"message":"272","line":380,"column":44,"nodeType":"273","messageId":"274","endLine":380,"endColumn":46},{"ruleId":"271","severity":1,"message":"272","line":380,"column":69,"nodeType":"273","messageId":"274","endLine":380,"endColumn":71},{"ruleId":"271","severity":1,"message":"272","line":384,"column":53,"nodeType":"273","messageId":"274","endLine":384,"endColumn":55},{"ruleId":"271","severity":1,"message":"272","line":384,"column":76,"nodeType":"273","messageId":"274","endLine":384,"endColumn":78},{"ruleId":"333","severity":1,"message":"334","line":385,"column":132,"nodeType":"335","messageId":"274","endLine":385,"endColumn":140},{"ruleId":"271","severity":1,"message":"272","line":431,"column":84,"nodeType":"273","messageId":"274","endLine":431,"endColumn":86},{"ruleId":"271","severity":1,"message":"272","line":463,"column":125,"nodeType":"273","messageId":"274","endLine":463,"endColumn":127},{"ruleId":"271","severity":1,"message":"272","line":464,"column":86,"nodeType":"273","messageId":"274","endLine":464,"endColumn":88},{"ruleId":"271","severity":1,"message":"272","line":464,"column":107,"nodeType":"273","messageId":"274","endLine":464,"endColumn":109},{"ruleId":"271","severity":1,"message":"272","line":464,"column":152,"nodeType":"273","messageId":"274","endLine":464,"endColumn":154},{"ruleId":"271","severity":1,"message":"272","line":464,"column":173,"nodeType":"273","messageId":"274","endLine":464,"endColumn":175},{"ruleId":"271","severity":1,"message":"272","line":464,"column":229,"nodeType":"273","messageId":"274","endLine":464,"endColumn":231},{"ruleId":"266","severity":1,"message":"336","line":2,"column":10,"nodeType":"268","messageId":"269","endLine":2,"endColumn":15},{"ruleId":"266","severity":1,"message":"337","line":2,"column":17,"nodeType":"268","messageId":"269","endLine":2,"endColumn":23},{"ruleId":"266","severity":1,"message":"338","line":2,"column":25,"nodeType":"268","messageId":"269","endLine":2,"endColumn":28},{"ruleId":"266","severity":1,"message":"339","line":2,"column":30,"nodeType":"268","messageId":"269","endLine":2,"endColumn":35},{"ruleId":"266","severity":1,"message":"340","line":2,"column":37,"nodeType":"268","messageId":"269","endLine":2,"endColumn":41},{"ruleId":"266","severity":1,"message":"341","line":2,"column":53,"nodeType":"268","messageId":"269","endLine":2,"endColumn":59},{"ruleId":"266","severity":1,"message":"315","line":3,"column":9,"nodeType":"268","messageId":"269","endLine":3,"endColumn":21},{"ruleId":"266","severity":1,"message":"329","line":3,"column":23,"nodeType":"268","messageId":"269","endLine":3,"endColumn":35},{"ruleId":"266","severity":1,"message":"342","line":4,"column":10,"nodeType":"268","messageId":"269","endLine":4,"endColumn":26},{"ruleId":"266","severity":1,"message":"343","line":4,"column":28,"nodeType":"268","messageId":"269","endLine":4,"endColumn":41},{"ruleId":"266","severity":1,"message":"330","line":4,"column":43,"nodeType":"268","messageId":"269","endLine":4,"endColumn":56},{"ruleId":"266","severity":1,"message":"344","line":23,"column":12,"nodeType":"268","messageId":"269","endLine":23,"endColumn":32},{"ruleId":"266","severity":1,"message":"345","line":23,"column":34,"nodeType":"268","messageId":"269","endLine":23,"endColumn":57},{"ruleId":"266","severity":1,"message":"322","line":24,"column":12,"nodeType":"268","messageId":"269","endLine":24,"endColumn":19},{"ruleId":"266","severity":1,"message":"323","line":24,"column":21,"nodeType":"268","messageId":"269","endLine":24,"endColumn":31},{"ruleId":"266","severity":1,"message":"346","line":25,"column":20,"nodeType":"268","messageId":"269","endLine":25,"endColumn":29},{"ruleId":"271","severity":1,"message":"328","line":64,"column":29,"nodeType":"273","messageId":"274","endLine":64,"endColumn":31},{"ruleId":"271","severity":1,"message":"272","line":98,"column":52,"nodeType":"273","messageId":"274","endLine":98,"endColumn":54},{"ruleId":"271","severity":1,"message":"272","line":128,"column":73,"nodeType":"273","messageId":"274","endLine":128,"endColumn":75},{"ruleId":"266","severity":1,"message":"347","line":157,"column":11,"nodeType":"268","messageId":"269","endLine":157,"endColumn":23},{"ruleId":"271","severity":1,"message":"272","line":180,"column":21,"nodeType":"273","messageId":"274","endLine":180,"endColumn":23},{"ruleId":"275","severity":1,"message":"331","line":194,"column":7,"nodeType":"277","endLine":194,"endColumn":19,"suggestions":"348"},{"ruleId":"275","severity":1,"message":"349","line":200,"column":8,"nodeType":"277","endLine":200,"endColumn":19,"suggestions":"350"},{"ruleId":"275","severity":1,"message":"351","line":210,"column":8,"nodeType":"277","endLine":210,"endColumn":13,"suggestions":"352"},{"ruleId":"271","severity":1,"message":"272","line":221,"column":44,"nodeType":"273","messageId":"274","endLine":221,"endColumn":46},{"ruleId":"271","severity":1,"message":"272","line":221,"column":69,"nodeType":"273","messageId":"274","endLine":221,"endColumn":71},{"ruleId":"271","severity":1,"message":"272","line":225,"column":53,"nodeType":"273","messageId":"274","endLine":225,"endColumn":55},{"ruleId":"271","severity":1,"message":"272","line":225,"column":76,"nodeType":"273","messageId":"274","endLine":225,"endColumn":78},{"ruleId":"333","severity":1,"message":"334","line":226,"column":132,"nodeType":"335","messageId":"274","endLine":226,"endColumn":140},{"ruleId":"271","severity":1,"message":"272","line":241,"column":59,"nodeType":"273","messageId":"274","endLine":241,"endColumn":61},{"ruleId":"271","severity":1,"message":"272","line":247,"column":101,"nodeType":"273","messageId":"274","endLine":247,"endColumn":103},{"ruleId":"271","severity":1,"message":"272","line":263,"column":63,"nodeType":"273","messageId":"274","endLine":263,"endColumn":65},{"ruleId":"271","severity":1,"message":"272","line":269,"column":101,"nodeType":"273","messageId":"274","endLine":269,"endColumn":103},{"ruleId":"271","severity":1,"message":"272","line":284,"column":47,"nodeType":"273","messageId":"274","endLine":284,"endColumn":49},{"ruleId":"271","severity":1,"message":"272","line":284,"column":72,"nodeType":"273","messageId":"274","endLine":284,"endColumn":74},{"ruleId":"271","severity":1,"message":"272","line":311,"column":67,"nodeType":"273","messageId":"274","endLine":311,"endColumn":69},{"ruleId":"271","severity":1,"message":"272","line":330,"column":70,"nodeType":"273","messageId":"274","endLine":330,"endColumn":72},{"ruleId":"333","severity":1,"message":"353","line":385,"column":177,"nodeType":"335","messageId":"274","endLine":385,"endColumn":182},{"ruleId":"271","severity":1,"message":"272","line":399,"column":72,"nodeType":"273","messageId":"274","endLine":399,"endColumn":74},{"ruleId":"266","severity":1,"message":"354","line":1,"column":17,"nodeType":"268","messageId":"269","endLine":1,"endColumn":25},{"ruleId":"266","severity":1,"message":"326","line":1,"column":27,"nodeType":"268","messageId":"269","endLine":1,"endColumn":36},{"ruleId":"266","severity":1,"message":"355","line":2,"column":25,"nodeType":"268","messageId":"269","endLine":2,"endColumn":31},{"ruleId":"266","severity":1,"message":"356","line":2,"column":10,"nodeType":"268","messageId":"269","endLine":2,"endColumn":16},{"ruleId":"266","severity":1,"message":"357","line":4,"column":10,"nodeType":"268","messageId":"269","endLine":4,"endColumn":19},{"ruleId":"266","severity":1,"message":"358","line":4,"column":21,"nodeType":"268","messageId":"269","endLine":4,"endColumn":25},{"ruleId":"266","severity":1,"message":"359","line":12,"column":7,"nodeType":"268","messageId":"269","endLine":12,"endColumn":17},{"ruleId":"266","severity":1,"message":"360","line":34,"column":12,"nodeType":"268","messageId":"269","endLine":34,"endColumn":19},{"ruleId":"275","severity":1,"message":"361","line":53,"column":8,"nodeType":"277","endLine":53,"endColumn":18,"suggestions":"362"},{"ruleId":"266","severity":1,"message":"357","line":2,"column":10,"nodeType":"268","messageId":"269","endLine":2,"endColumn":19},{"ruleId":"266","severity":1,"message":"358","line":2,"column":21,"nodeType":"268","messageId":"269","endLine":2,"endColumn":25},{"ruleId":"266","severity":1,"message":"363","line":21,"column":12,"nodeType":"268","messageId":"269","endLine":21,"endColumn":21},{"ruleId":"275","severity":1,"message":"364","line":58,"column":8,"nodeType":"277","endLine":58,"endColumn":19,"suggestions":"365"},"no-native-reassign",["366"],"no-negated-in-lhs",["367"],"no-unused-vars","'BarChart' is defined but never used.","Identifier","unusedVar","'Dropdown' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.","ArrayExpression",["368"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'CartesianGrid' is defined but never used.","'AppIndicator' is defined but never used.","'io' is defined but never used.","no-redeclare","'i' is already defined.","redeclared","'calculateAveragePercentage' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'calculateAverageDuration' and 'calculateFavourite'. Either include them or remove the dependency array.",["369"],"'Profiler' is defined but never used.","'LoadingOutlined' is defined but never used.","'Space' is defined but never used.","'Upload' is defined but never used.","'message' is defined but never used.","'IoAddOutline' is defined but never used.","'Avatars' is defined but never used.","'dummy' is defined but never used.","'getusers' is defined but never used.","'useSelector' is defined but never used.","'profileLoading' is assigned a value but never used.","'imageLoading' is assigned a value but never used.","'setImageLoading' is assigned a value but never used.","'imageUrl' is assigned a value but never used.","'setImageUrl' is assigned a value but never used.","'close' is assigned a value but never used.","'setClose' is assigned a value but never used.","'preview' is assigned a value but never used.","'onClose' is defined but never used.","'onCrop' is defined but never used.","'onBeforeFileLoad' is defined but never used.",["370"],"'Col' is defined but never used.","'Row' is defined but never used.","'UserOutlined' is defined but never used.","'AntDesignOutlined' is defined but never used.","'PlayBtn' is defined but never used.","'VscDebugStart' is defined but never used.","'VscDebugStop' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'setButtonLoading' is assigned a value but never used.","'sessionInformation' is assigned a value but never used.","'useEffect' is defined but never used.","'api' is defined but never used.","Expected '!==' and instead saw '!='.","'SyncOutlined' is defined but never used.","'AiOutlineUser' is defined but never used.","React Hook useEffect has a missing dependency: 'calculateIndividualDance'. Either include it or remove the dependency array.",["371"],"no-dupe-keys","Duplicate key 'fontSize'.","ObjectExpression","'Table' is defined but never used.","'Avatar' is defined but never used.","'Tag' is defined but never used.","'Input' is defined but never used.","'Spin' is defined but never used.","'Button' is defined but never used.","'AiOutlineWarning' is defined but never used.","'AiOutlineLike' is defined but never used.","'tiredDurationMinutes' is assigned a value but never used.","'setTiredDurationMinutes' is assigned a value but never used.","'setObject' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.",["372"],"React Hook useEffect has a missing dependency: 'calculateSyncDelay'. Either include it or remove the dependency array.",["373"],"React Hook useEffect has a missing dependency: 'calculateTired'. Either include it or remove the dependency array.",["374"],"Duplicate key 'width'.","'useState' is defined but never used.","'Sector' is defined but never used.","'render' is defined but never used.","'LineChart' is defined but never used.","'Line' is defined but never used.","'launchDate' is assigned a value but never used.","'percent' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'calculatePercentage'. Either include it or remove the dependency array.",["375"],"'tiredTime' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'findTiredTime'. Either include it or remove the dependency array.",["376"],"no-global-assign","no-unsafe-negation",{"desc":"377","fix":"378"},{"desc":"379","fix":"380"},{"desc":"377","fix":"381"},{"desc":"382","fix":"383"},{"desc":"382","fix":"384"},{"desc":"385","fix":"386"},{"desc":"387","fix":"388"},{"desc":"389","fix":"390"},{"desc":"391","fix":"392"},"Update the dependencies array to be: [getUser]",{"range":"393","text":"394"},"Update the dependencies array to be: [calculateAverageDuration, calculateFavourite, userData]",{"range":"395","text":"396"},{"range":"397","text":"394"},"Update the dependencies array to be: [calculateIndividualDance, evaluation]",{"range":"398","text":"399"},{"range":"400","text":"399"},"Update the dependencies array to be: [calculateSyncDelay, syncDelay]",{"range":"401","text":"402"},"Update the dependencies array to be: [calculateTired, emg]",{"range":"403","text":"404"},"Update the dependencies array to be: [calculatePercentage, syncData]",{"range":"405","text":"406"},"Update the dependencies array to be: [findTiredTime, startTime]",{"range":"407","text":"408"},[2213,2215],"[getUser]",[3981,3991],"[calculateAverageDuration, calculateFavourite, userData]",[5328,5330],[9430,9442],"[calculateIndividualDance, evaluation]",[7504,7516],[7622,7633],"[calculateSyncDelay, syncDelay]",[7791,7796],"[calculateTired, emg]",[1222,1232],"[calculatePercentage, syncData]",[1593,1604],"[findTiredTime, startTime]"]
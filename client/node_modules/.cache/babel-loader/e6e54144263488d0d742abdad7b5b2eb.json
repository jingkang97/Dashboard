{"ast":null,"code":"var _jsxFileName = \"/Users/jingkangng/Documents/Y4S1/CG4002/dashboard/client/src/components/mqtt/Connection.js\";\nimport React from 'react';\nimport { Card, Button, Form, Input, Row, Col } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Connection = ({\n  connect,\n  disconnect,\n  connectBtn,\n  start\n}) => {\n  const record = {\n    host: 'broker.emqx.io',\n    clientId: `123`,\n    port: 8083\n  };\n\n  const handleConnect = values => {\n    const {\n      host,\n      clientId,\n      port\n    } = record;\n    const url = `ws://${host}:${port}/mqtt`;\n    const options = {\n      keepalive: 30,\n      protocolId: 'MQTT',\n      protocolVersion: 4,\n      clean: true,\n      reconnectPeriod: 1000,\n      connectTimeout: 30 * 1000,\n      will: {\n        topic: 'WillMsg',\n        payload: 'Connection Closed abnormally..!',\n        qos: 0,\n        retain: false\n      },\n      rejectUnauthorized: false\n    };\n    options.clientId = clientId;\n    connect(url, options);\n  };\n\n  const handleDisconnect = () => {\n    disconnect();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      onClick: handleConnect,\n      children: connectBtn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), \",\", /*#__PURE__*/_jsxDEV(Button, {\n      danger: true,\n      onClick: handleDisconnect,\n      children: \"Disconnect\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this) // <Card\n  //   title=\"Connection\"\n  //   actions={[\n  //     <Button type=\"primary\" onClick={handleConnect}>{connectBtn}</Button>,\n  //     <Button danger onClick={handleDisconnect}>Disconnect</Button>\n  //   ]}\n  // >\n  // </Card>\n  ;\n};\n\n_c = Connection;\nexport default Connection;\n\nvar _c;\n\n$RefreshReg$(_c, \"Connection\");","map":{"version":3,"sources":["/Users/jingkangng/Documents/Y4S1/CG4002/dashboard/client/src/components/mqtt/Connection.js"],"names":["React","Card","Button","Form","Input","Row","Col","Connection","connect","disconnect","connectBtn","start","record","host","clientId","port","handleConnect","values","url","options","keepalive","protocolId","protocolVersion","clean","reconnectPeriod","connectTimeout","will","topic","payload","qos","retain","rejectUnauthorized","handleDisconnect"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,IAAvB,EAA6BC,KAA7B,EAAoCC,GAApC,EAAyCC,GAAzC,QAAoD,MAApD;;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,UAAX;AAAuBC,EAAAA,UAAvB;AAAmCC,EAAAA;AAAnC,CAAD,KAAgD;AACjE,QAAMC,MAAM,GAAG;AACbC,IAAAA,IAAI,EAAE,gBADO;AAEbC,IAAAA,QAAQ,EAAG,KAFE;AAGbC,IAAAA,IAAI,EAAE;AAHO,GAAf;;AAKA,QAAMC,aAAa,GAAIC,MAAD,IAAY;AAChC,UAAM;AAAEJ,MAAAA,IAAF;AAAQC,MAAAA,QAAR;AAAkBC,MAAAA;AAAlB,QAA2BH,MAAjC;AACA,UAAMM,GAAG,GAAI,QAAOL,IAAK,IAAGE,IAAK,OAAjC;AACA,UAAMI,OAAO,GAAG;AACdC,MAAAA,SAAS,EAAE,EADG;AAEdC,MAAAA,UAAU,EAAE,MAFE;AAGdC,MAAAA,eAAe,EAAE,CAHH;AAIdC,MAAAA,KAAK,EAAE,IAJO;AAKdC,MAAAA,eAAe,EAAE,IALH;AAMdC,MAAAA,cAAc,EAAE,KAAK,IANP;AAOdC,MAAAA,IAAI,EAAE;AACJC,QAAAA,KAAK,EAAE,SADH;AAEJC,QAAAA,OAAO,EAAE,iCAFL;AAGJC,QAAAA,GAAG,EAAE,CAHD;AAIJC,QAAAA,MAAM,EAAE;AAJJ,OAPQ;AAadC,MAAAA,kBAAkB,EAAE;AAbN,KAAhB;AAeAZ,IAAAA,OAAO,CAACL,QAAR,GAAmBA,QAAnB;AACAN,IAAAA,OAAO,CAACU,GAAD,EAAMC,OAAN,CAAP;AACD,GApBD;;AAqBA,QAAMa,gBAAgB,GAAG,MAAM;AAC7BvB,IAAAA,UAAU;AACX,GAFD;;AAIA,sBACE;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,OAAO,EAAEO,aAAhC;AAAA,gBAAgDN;AAAhD;AAAA;AAAA;AAAA;AAAA,YADJ,oBAEI,QAAC,MAAD;AAAQ,MAAA,MAAM,MAAd;AAAe,MAAA,OAAO,EAAEsB,gBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CAKE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZF;AAcD,CA7CD;;KAAMzB,U;AA+CN,eAAeA,UAAf","sourcesContent":["import React from 'react';\nimport { Card, Button, Form, Input, Row, Col } from 'antd';\n\nconst Connection = ({ connect, disconnect, connectBtn, start }) => {\n  const record = {\n    host: 'broker.emqx.io',\n    clientId: `123`,\n    port: 8083,\n  };\n  const handleConnect = (values) => {\n    const { host, clientId, port } = record;\n    const url = `ws://${host}:${port}/mqtt`;\n    const options = {\n      keepalive: 30,\n      protocolId: 'MQTT',\n      protocolVersion: 4,\n      clean: true,\n      reconnectPeriod: 1000,\n      connectTimeout: 30 * 1000,\n      will: {\n        topic: 'WillMsg',\n        payload: 'Connection Closed abnormally..!',\n        qos: 0,\n        retain: false\n      },\n      rejectUnauthorized: false\n    };\n    options.clientId = clientId;\n    connect(url, options);\n  };\n  const handleDisconnect = () => {\n    disconnect();\n  };\n\n  return (\n    <div>\n        <Button type=\"primary\" onClick={handleConnect}>{connectBtn}</Button>,\n        <Button danger onClick={handleDisconnect}>Disconnect</Button>\n    </div>\n    // <Card\n    //   title=\"Connection\"\n    //   actions={[\n    //     <Button type=\"primary\" onClick={handleConnect}>{connectBtn}</Button>,\n    //     <Button danger onClick={handleDisconnect}>Disconnect</Button>\n    //   ]}\n    // >\n    // </Card>\n  );\n}\n\nexport default Connection;"]},"metadata":{},"sourceType":"module"}
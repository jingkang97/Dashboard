{"ast":null,"code":"var _jsxFileName = \"/Users/jingkangng/Documents/Y4S1/CG4002/dashboard/client/src/components/Session/NewSession.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Table, Avatar, Tag, Space, Input, Spin } from 'antd';\nimport { UserOutlined } from '@ant-design/icons';\nimport * as api from '../api/index';\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst NewSession = ({\n  userList,\n  test,\n  start\n}) => {\n  _s();\n\n  const [socket, setSocket] = useState(null); // const [start, setStart] = useState(false)\n\n  const columns = [{\n    title: 'User',\n    dataIndex: 'username',\n    key: 'name',\n    render: text => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'white',\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '100%'\n        },\n        children: [text, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 110\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 23\n    }, this)\n  }, {\n    dataIndex: 'image',\n    key: 'image',\n    render: text => /*#__PURE__*/_jsxDEV(Avatar, {\n      src: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 23\n    }, this)\n  }, {\n    title: 'Wearable Name',\n    dataIndex: 'wearable_name',\n    key: 'wearable_name',\n    render: text => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Tag, {\n        color: text == \"Dance Band Pro\" ? \"pink\" : text == \"Dance Band Lite\" ? \"green\" : null,\n        style: {\n          backgroundColor: \"transparent\",\n          color: 'white'\n        },\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 15\n      }, this)\n    }, void 0, false)\n  }, {\n    title: 'Wearable ID',\n    dataIndex: 'wearable_id',\n    key: 'wearable_id',\n    render: text => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }, this)\n    }, void 0, false)\n  }, {\n    title: 'Position',\n    render: (text, record, key) => /*#__PURE__*/_jsxDEV(Input // disabled={rows.find(o => o.key == key) ? false : true}\n    , {\n      disabled: keys.find(o => o == record._id) ? false : true // onChange={}\n      ,\n      style: {\n        width: '100%',\n        borderRadius: '8px',\n        border: 'transparent',\n        background: '#2f3136'\n      } // placeholder={key} \n      ,\n      placeholder: \"1, 2, 3, ...\",\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, {\n    title: 'Expected Moves',\n    render: (text, record) => /*#__PURE__*/_jsxDEV(Input, {\n      style: {\n        width: '100%',\n        borderRadius: '8px',\n        border: 'transparent',\n        background: '#2f3136'\n      },\n      placeholder: \"expected moves\",\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)\n  }];\n  const [users, setUsers] = useState(null);\n  const [sessionName, setSessionName] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [rows, setRows] = useState([]);\n  const [keys, setKeys] = useState([]);\n  const [array, setArray] = useState([]);\n\n  const handleSessionNameChange = e => {\n    setSessionName(e.target.value);\n  };\n\n  const getUsers = async () => {\n    try {\n      setLoading(true);\n      await api.getUsers().then(users => {\n        console.log(users);\n        setUsers(users.data);\n      });\n    } catch (error) {\n      alert(error);\n    } finally {\n      setLoading(false);\n    }\n  }; // const onSelectChange = selectedRowKeys => {\n  //     console.log('selectedRowKeys changed: ', selectedRowKeys);\n  //     setRows(...rows, selectedRowKeys)\n  //     // this.setState({ selectedRowKeys });\n  //   };\n  // const rowSelection = {\n  //     r,\n  //     onChange: onSelectChange,\n  //   };\n\n\n  useEffect(() => {\n    getUsers();\n  }, []);\n  useEffect(() => {\n    if (!start) {\n      setSocket(null);\n    } else if (start == true) {\n      setSocket(io(\"http://localhost:5000\"));\n    }\n  }, [start]);\n  useEffect(() => {\n    const messageListener = data => {\n      // if(data.beetleId == '1234')\n      setArray(prevArray => [...prevArray, data]);\n      console.log(data);\n    };\n\n    if (socket != null) {\n      socket.on('newData', messageListener);\n      return () => {\n        socket.off('newData', messageListener);\n      };\n    }\n  }, [socket]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '100%',\n      width: '100%'\n    },\n    children: [rows.length, console.log(keys), start ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"DASHBOARD\", /*#__PURE__*/_jsxDEV(\"div\", {\n        children: test\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            color: 'white'\n          },\n          children: \"New Session\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        name: \"name\",\n        size: \"large\",\n        value: sessionName,\n        onChange: handleSessionNameChange,\n        placeholder: \"session name\",\n        style: {\n          width: '100%',\n          marginTop: '10px',\n          borderRadius: '8px',\n          border: 'transparent',\n          background: '#2f3136',\n          marginBottom: '0px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          borderRadius: '20px',\n          overflow: 'hidden',\n          boxShadow: '0px 0px 20px 1px #202225',\n          marginTop: '20px',\n          backgroundColor: '#3A3C41'\n        },\n        children: /*#__PURE__*/_jsxDEV(Spin, {\n          spinning: loading,\n          delay: 500,\n          size: \"large\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              borderRadius: '20px',\n              backgroundColor: '#3A3C41',\n              width: '100%',\n              height: '100%',\n              marginTop: '20px',\n              marginBottom: '20px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                alignItems: 'center',\n                marginTop: '10px',\n                marginLeft: '20px'\n              },\n              children: [\"All Users \", /*#__PURE__*/_jsxDEV(UserOutlined, {\n                style: {\n                  marginLeft: '10px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Table // rowSelection={true}\n            , {\n              rowSelection: {\n                onSelect: record => {\n                  // setRows(record)\n                  // setRows(...rows, record)\n                  console.log({\n                    record\n                  });\n                },\n                onChange: (keys, record) => {\n                  setRows(record);\n                  setKeys(keys); // console.log(keys)\n                  // setRows(...rows, record)\n\n                  console.log(record);\n                }\n              },\n              style: {\n                margin: '10px'\n              },\n              pagination: false,\n              columns: columns,\n              dataSource: users,\n              rowKey: \"_id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NewSession, \"B1+m3DDB74IO34r2e+xtsot2rMY=\");\n\n_c = NewSession;\nexport default NewSession;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewSession\");","map":{"version":3,"sources":["/Users/jingkangng/Documents/Y4S1/CG4002/dashboard/client/src/components/Session/NewSession.js"],"names":["React","useState","useEffect","Table","Avatar","Tag","Space","Input","Spin","UserOutlined","api","io","NewSession","userList","test","start","socket","setSocket","columns","title","dataIndex","key","render","text","color","display","flexDirection","alignItems","width","backgroundColor","record","keys","find","o","_id","borderRadius","border","background","users","setUsers","sessionName","setSessionName","loading","setLoading","rows","setRows","setKeys","array","setArray","handleSessionNameChange","e","target","value","getUsers","then","console","log","data","error","alert","messageListener","prevArray","on","off","height","length","marginTop","marginBottom","overflow","boxShadow","marginLeft","onSelect","onChange","margin"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,GAAxB,EAA6BC,KAA7B,EAAoCC,KAApC,EAA2CC,IAA3C,QAAsD,MAAtD;AACA,SAAQC,YAAR,QAA2B,mBAA3B;AAEA,OAAO,KAAKC,GAAZ,MAAqB,cAArB;AAEA,SAAQC,EAAR,QAAiB,kBAAjB;;;;AAGA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA,IAAX;AAAiBC,EAAAA;AAAjB,CAAD,KAA6B;AAAA;;AAC9C,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAAC,IAAD,CAApC,CAD8C,CAE9C;;AAEA,QAAMiB,OAAO,GAAG,CACd;AACEC,IAAAA,KAAK,EAAE,MADT;AAEEC,IAAAA,SAAS,EAAE,UAFb;AAGEC,IAAAA,GAAG,EAAE,MAHP;AAIEC,IAAAA,MAAM,EAAEC,IAAI,iBAAI;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAC,OAAP;AAAgBC,QAAAA,OAAO,EAAC,MAAxB;AAAgCC,QAAAA,aAAa,EAAC,KAA9C;AAAqDC,QAAAA,UAAU,EAAC;AAAhE,OAAZ;AAAA,8BAAuF;AAAK,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAC;AAAP,SAAZ;AAAA,mBAA6BL,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,cAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJlB,GADc,EAOd;AACEH,IAAAA,SAAS,EAAE,OADb;AAEEC,IAAAA,GAAG,EAAE,OAFP;AAGEC,IAAAA,MAAM,EAAEC,IAAI,iBAAI,QAAC,MAAD;AAAQ,MAAA,GAAG,EAAEA;AAAb;AAAA;AAAA;AAAA;AAAA;AAHlB,GAPc,EAad;AACIJ,IAAAA,KAAK,EAAE,eADX;AAEIC,IAAAA,SAAS,EAAE,eAFf;AAGIC,IAAAA,GAAG,EAAE,eAHT;AAIIC,IAAAA,MAAM,EAAEC,IAAI,iBACR;AAAA,6BACE,QAAC,GAAD;AAAK,QAAA,KAAK,EAAEA,IAAI,IAAI,gBAAR,GAA2B,MAA3B,GAAqCA,IAAI,IAAI,iBAAR,GAA4B,OAA5B,GAAsC,IAAvF;AAA8F,QAAA,KAAK,EAAE;AAACM,UAAAA,eAAe,EAAC,aAAjB;AAAgCL,UAAAA,KAAK,EAAC;AAAtC,SAArG;AAAA,kBACGD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AALR,GAbc,EAwBZ;AACEJ,IAAAA,KAAK,EAAE,aADT;AAEEC,IAAAA,SAAS,EAAE,aAFb;AAGEC,IAAAA,GAAG,EAAE,aAHP;AAIEC,IAAAA,MAAM,EAAEC,IAAI,iBACR;AAAA,6BACE;AAAA,kBAAMA;AAAN;AAAA;AAAA;AAAA;AAAA;AADF;AALN,GAxBY,EAkCd;AACIJ,IAAAA,KAAK,EAAE,UADX;AAEIG,IAAAA,MAAM,EAAE,CAACC,IAAD,EAAOO,MAAP,EAAeT,GAAf,kBACJ,QAAC,KAAD,CACA;AADA;AAEA,MAAA,QAAQ,EAAIU,IAAI,CAACC,IAAL,CAAUC,CAAC,IAAIA,CAAC,IAAIH,MAAM,CAACI,GAA3B,IAAkC,KAAlC,GAA0C,IAFtD,CAGA;AAHA;AAIA,MAAA,KAAK,EAAE;AAACN,QAAAA,KAAK,EAAC,MAAP;AAAeO,QAAAA,YAAY,EAAC,KAA5B;AAAmCC,QAAAA,MAAM,EAAC,aAA1C;AAAyDC,QAAAA,UAAU,EAAC;AAApE,OAJP,CAKA;AALA;AAMA,MAAA,WAAW,EAAC,cANZ;AAOA,MAAA,IAAI,EAAC;AAPL;AAAA;AAAA;AAAA;AAAA;AAHR,GAlCc,EAgDb;AACGlB,IAAAA,KAAK,EAAE,gBADV;AAEGG,IAAAA,MAAM,EAAE,CAACC,IAAD,EAAOO,MAAP,kBACJ,QAAC,KAAD;AACA,MAAA,KAAK,EAAE;AAACF,QAAAA,KAAK,EAAC,MAAP;AAAeO,QAAAA,YAAY,EAAC,KAA5B;AAAmCC,QAAAA,MAAM,EAAC,aAA1C;AAAyDC,QAAAA,UAAU,EAAC;AAApE,OADP;AAEA,MAAA,WAAW,EAAC,gBAFZ;AAGA,MAAA,IAAI,EAAC;AAHL;AAAA;AAAA;AAAA;AAAA;AAHP,GAhDa,CAAhB;AA0DE,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBtC,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACuC,WAAD,EAAcC,cAAd,IAAgCxC,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACyC,OAAD,EAAUC,UAAV,IAAwB1C,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAAC2C,IAAD,EAAOC,OAAP,IAAkB5C,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAAC8B,IAAD,EAAOe,OAAP,IAAkB7C,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAAC8C,KAAD,EAAQC,QAAR,IAAoB/C,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMgD,uBAAuB,GAAIC,CAAD,IAAO;AACnCT,IAAAA,cAAc,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACH,GAFD;;AAGA,QAAMC,QAAQ,GAAG,YAAW;AACxB,QAAI;AACAV,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAMjC,GAAG,CAAC2C,QAAJ,GAAeC,IAAf,CAAoBhB,KAAK,IAAI;AACjCiB,QAAAA,OAAO,CAACC,GAAR,CAAYlB,KAAZ;AACAC,QAAAA,QAAQ,CAACD,KAAK,CAACmB,IAAP,CAAR;AACD,OAHK,CAAN;AAID,KANH,CAMI,OAAOC,KAAP,EAAc;AACdC,MAAAA,KAAK,CAACD,KAAD,CAAL;AACD,KARH,SASS;AACLf,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACN,GAbD,CAxE4C,CAsF5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAzC,EAAAA,SAAS,CAAC,MAAM;AACZmD,IAAAA,QAAQ;AACX,GAFQ,EAEN,EAFM,CAAT;AAIAnD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAG,CAACa,KAAJ,EAAU;AACRE,MAAAA,SAAS,CAAC,IAAD,CAAT;AACD,KAFD,MAGK,IAAGF,KAAK,IAAI,IAAZ,EAAiB;AACpBE,MAAAA,SAAS,CAACN,EAAE,CAAC,uBAAD,CAAH,CAAT;AAED;AACF,GARQ,EAQN,CAACI,KAAD,CARM,CAAT;AAUAb,EAAAA,SAAS,CAAC,MAAI;AACZ,UAAM0D,eAAe,GAAIH,IAAD,IAAU;AAChC;AACAT,MAAAA,QAAQ,CAACa,SAAS,IAAI,CAAC,GAAGA,SAAJ,EAAeJ,IAAf,CAAd,CAAR;AACIF,MAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AACL,KAJD;;AAKA,QAAGzC,MAAM,IAAE,IAAX,EAAgB;AACdA,MAAAA,MAAM,CAAC8C,EAAP,CAAU,SAAV,EAAqBF,eAArB;AACF,aAAO,MAAM;AACX5C,QAAAA,MAAM,CAAC+C,GAAP,CAAW,SAAX,EAAsBH,eAAtB;AACD,OAFD;AAGC;AAEF,GAbQ,EAaP,CAAC5C,MAAD,CAbO,CAAT;AAcA,sBACI;AAAK,IAAA,KAAK,EAAE;AAACgD,MAAAA,MAAM,EAAC,MAAR;AAAgBpC,MAAAA,KAAK,EAAC;AAAtB,KAAZ;AAAA,eACGgB,IAAI,CAACqB,MADR,EAEGV,OAAO,CAACC,GAAR,CAAYzB,IAAZ,CAFH,EAGKhB,KAAK,gBACN;AAAA,2CAGI;AAAA,kBAMKD;AANL;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADM,gBAcN;AAAA,8BAEA;AAAA,+BACI;AAAI,UAAA,KAAK,EAAE;AAACU,YAAAA,KAAK,EAAC;AAAP,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFA,eAKA,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,OAAxB;AACA,QAAA,KAAK,EAAEgB,WADP;AAEA,QAAA,QAAQ,EAAES,uBAFV;AAGA,QAAA,WAAW,EAAC,cAHZ;AAIA,QAAA,KAAK,EAAE;AAACrB,UAAAA,KAAK,EAAC,MAAP;AAAesC,UAAAA,SAAS,EAAC,MAAzB;AAAiC/B,UAAAA,YAAY,EAAC,KAA9C;AAAqDC,UAAAA,MAAM,EAAC,aAA5D;AAA2EC,UAAAA,UAAU,EAAC,SAAtF;AAAiG8B,UAAAA,YAAY,EAAC;AAA9G;AAJP;AAAA;AAAA;AAAA;AAAA,cALA,eAWA;AAAK,QAAA,KAAK,EAAE;AAAChC,UAAAA,YAAY,EAAC,MAAd;AAAsBiC,UAAAA,QAAQ,EAAC,QAA/B;AAA0CC,UAAAA,SAAS,EAAE,0BAArD;AAAiFH,UAAAA,SAAS,EAAC,MAA3F;AAAmGrC,UAAAA,eAAe,EAAC;AAAnH,SAAZ;AAAA,+BACA,QAAC,IAAD;AAAM,UAAA,QAAQ,EAAEa,OAAhB;AAAyB,UAAA,KAAK,EAAE,GAAhC;AAAqC,UAAA,IAAI,EAAC,OAA1C;AAAA,iCAEA;AAAK,YAAA,KAAK,EAAE;AAACP,cAAAA,YAAY,EAAC,MAAd;AAAsBN,cAAAA,eAAe,EAAC,SAAtC;AAAiDD,cAAAA,KAAK,EAAC,MAAvD;AAA+DoC,cAAAA,MAAM,EAAC,MAAtE;AAA8EE,cAAAA,SAAS,EAAC,MAAxF;AAAgGC,cAAAA,YAAY,EAAC;AAA7G,aAAZ;AAAA,oCAEA;AAAK,cAAA,KAAK,EAAE;AAAC1C,gBAAAA,OAAO,EAAC,MAAT;AAAiBE,gBAAAA,UAAU,EAAC,QAA5B;AAAsCuC,gBAAAA,SAAS,EAAC,MAAhD;AAAwDI,gBAAAA,UAAU,EAAC;AAAnE,eAAZ;AAAA,oDACc,QAAC,YAAD;AAAc,gBAAA,KAAK,EAAE;AAACA,kBAAAA,UAAU,EAAC;AAAZ;AAArB;AAAA;AAAA;AAAA;AAAA,sBADd;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFA,eAKA,QAAC,KAAD,CACI;AADJ;AAEI,cAAA,YAAY,EAAG;AACXC,gBAAAA,QAAQ,EAAEzC,MAAD,IAAY;AACjB;AACA;AACAyB,kBAAAA,OAAO,CAACC,GAAR,CAAY;AAAC1B,oBAAAA;AAAD,mBAAZ;AACH,iBALU;AAMX0C,gBAAAA,QAAQ,EAAE,CAACzC,IAAD,EAAOD,MAAP,KAAkB;AAC1Be,kBAAAA,OAAO,CAACf,MAAD,CAAP;AACAgB,kBAAAA,OAAO,CAACf,IAAD,CAAP,CAF0B,CAGxB;AACA;;AACAwB,kBAAAA,OAAO,CAACC,GAAR,CAAY1B,MAAZ;AAEH;AAbU,eAFnB;AAiBI,cAAA,KAAK,EAAE;AAAC2C,gBAAAA,MAAM,EAAC;AAAR,eAjBX;AAkBI,cAAA,UAAU,EAAE,KAlBhB;AAmBI,cAAA,OAAO,EAAEvD,OAnBb;AAoBI,cAAA,UAAU,EAAEoB,KApBhB;AAqBI,cAAA,MAAM,EAAC;AArBX;AAAA;AAAA;AAAA;AAAA,oBALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cAXA;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAwEH,CAnMD;;GAAM1B,U;;KAAAA,U;AAqMN,eAAeA,UAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { Table, Avatar, Tag, Space, Input, Spin} from 'antd'\nimport {UserOutlined} from '@ant-design/icons';\n\nimport * as api from '../api/index'\n\nimport {io} from 'socket.io-client'\n\n\nconst NewSession = ({userList, test, start}) => {\n  const [socket, setSocket] = useState(null)\n  // const [start, setStart] = useState(false)\n\n  const columns = [\n    {\n      title: 'User',\n      dataIndex: 'username',\n      key: 'name',\n      render: text => <div style={{color:'white', display:'flex', flexDirection:'row', alignItems:'center'}}><div style={{width:'100%'}}>{text} </div> </div>,\n    },\n    {\n      dataIndex: 'image',\n      key: 'image',\n      render: text => <Avatar src={text}/>\n\n    },\n    {\n        title: 'Wearable Name',\n        dataIndex: 'wearable_name',\n        key: 'wearable_name',\n        render: text => \n            <>\n              <Tag color={text == \"Dance Band Pro\" ? \"pink\" : (text == \"Dance Band Lite\" ? \"green\" : null)} style={{backgroundColor:\"transparent\", color:'white'}}>\n                {text}\n              </Tag>\n            </>\n      },\n      {\n        title: 'Wearable ID',\n        dataIndex: 'wearable_id',\n        key: 'wearable_id',\n        render: text => \n            <>\n              <div>{text}</div>\n            </>\n      },\n    \n    {\n        title: 'Position',\n        render: (text, record, key) =>\n            <Input \n            // disabled={rows.find(o => o.key == key) ? false : true}\n            disabled = {keys.find(o => o == record._id) ? false : true}\n            // onChange={}\n            style={{width:'100%', borderRadius:'8px', border:'transparent', background:'#2f3136'}}\n            // placeholder={key} \n            placeholder='1, 2, 3, ...'\n            type=\"text\"/>\n          \n      },\n\n     {\n        title: 'Expected Moves',\n        render: (text, record) =>\n            <Input \n            style={{width:'100%', borderRadius:'8px', border:'transparent', background:'#2f3136'}}\n            placeholder=\"expected moves\" \n            type=\"text\"/>\n          \n      },\n  ];\n    const [users, setUsers] = useState(null)\n    const [sessionName, setSessionName] = useState('')\n    const [loading, setLoading] = useState(false)\n    const [rows, setRows] = useState([])\n    const [keys, setKeys] = useState([])\n    const [array, setArray] = useState([])\n\n    const handleSessionNameChange = (e) => {\n        setSessionName(e.target.value)\n    }\n    const getUsers = async() => {\n        try {\n            setLoading(true)\n            await api.getUsers().then(users => {\n              console.log(users)\n              setUsers(users.data)\n            })\n          } catch (error) {\n            alert(error)\n          }\n          finally{\n            setLoading(false)\n          }\n    }\n    // const onSelectChange = selectedRowKeys => {\n    //     console.log('selectedRowKeys changed: ', selectedRowKeys);\n    //     setRows(...rows, selectedRowKeys)\n    //     // this.setState({ selectedRowKeys });\n    //   };\n    // const rowSelection = {\n    //     r,\n    //     onChange: onSelectChange,\n    //   };\n    useEffect(() => {\n        getUsers()\n    }, [])\n\n    useEffect(() => {\n      if(!start){\n        setSocket(null)\n      }\n      else if(start == true){\n        setSocket(io(\"http://localhost:5000\"))\n        \n      }\n    }, [start])\n\n    useEffect(()=>{\n      const messageListener = (data) => {\n        // if(data.beetleId == '1234')\n        setArray(prevArray => [...prevArray, data])\n            console.log(data)\n      };\n      if(socket!=null){\n        socket.on('newData', messageListener)\n      return () => {\n        socket.off('newData', messageListener);\n      };\n      }\n      \n    },[socket])\n    return ( \n        <div style={{height:'100%', width:'100%'}}>\n          {rows.length}\n          {console.log(keys)}\n            {start ? \n            <div>\n                DASHBOARD\n                {/* array of users selected, three divs */}\n                <div>\n                    {/* user selected */}\n                    {/* position */}\n                    {/* expected dance move now */}\n                    {/* wearable id */}\n                    {/* fatigue check */}\n                    {test}\n                </div>\n            </div>\n            : \n            <div>\n\n            <div>\n                <h3 style={{color:'white'}}>New Session</h3>\n            </div>\n            <Input name=\"name\" size=\"large\" \n            value={sessionName}\n            onChange={handleSessionNameChange}\n            placeholder=\"session name\" \n            style={{width:'100%', marginTop:'10px', borderRadius:'8px', border:'transparent', background:'#2f3136', marginBottom:'0px'}}\n            />\n            <div style={{borderRadius:'20px', overflow:'hidden',  boxShadow: '0px 0px 20px 1px #202225', marginTop:'20px', backgroundColor:'#3A3C41'}}>\n            <Spin spinning={loading} delay={500} size=\"large\">\n\n            <div style={{borderRadius:'20px', backgroundColor:'#3A3C41', width:'100%', height:'100%', marginTop:'20px', marginBottom:'20px'}}>\n\n            <div style={{display:'flex', alignItems:'center', marginTop:'10px', marginLeft:'20px'}}>\n                All Users <UserOutlined style={{marginLeft:'10px'}}/>\n            </div>\n            <Table \n                // rowSelection={true}\n                rowSelection ={{\n                    onSelect:(record) => {\n                        // setRows(record)\n                        // setRows(...rows, record)\n                        console.log({record})\n                    },\n                    onChange: (keys, record) => {\n                      setRows(record)\n                      setKeys(keys)\n                        // console.log(keys)\n                        // setRows(...rows, record)\n                        console.log(record)\n                        \n                    }\n                }}\n                style={{margin:'10px'}}\n                pagination={false}\n                columns={columns} \n                dataSource={users} \n                rowKey='_id'\n                />\n\n            </div>\n            </Spin>\n\n            </div>\n            </div>\n            \n            }\n            \n\n        </div>\n     );\n}\n \nexport default NewSession;"]},"metadata":{},"sourceType":"module"}
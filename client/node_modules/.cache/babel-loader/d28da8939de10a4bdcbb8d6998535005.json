{"ast":null,"code":"var _jsxFileName = \"/Users/jingkangng/Documents/Y4S1/CG4002/dashboard/client/src/components/Session/DoughnutChart.js\";\nimport React, { useState, useEffect } from 'react';\nimport { PieChart, Pie, Sector, Cell, ResponsiveContainer, Tooltip } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\nconst data = [{\n  name: 'A1',\n  value: 100\n}, {\n  name: 'A2',\n  value: 300\n}];\n\nconst Chart = () => {\n  // const [data, setData] = useState()\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '300px',\n      width: '300px'\n    },\n    children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: \"100%\",\n      children: /*#__PURE__*/_jsxDEV(PieChart, {\n        children: [/*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Pie, {\n          data: data,\n          dataKey: \"value\",\n          innerRadius: 70,\n          outerRadius: 90,\n          label: true,\n          children: data.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n            fill: COLORS[index % COLORS.length]\n          }, `cell-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Chart;\nexport default Chart; // export default class Example extends PureComponent {\n//   static demoUrl = 'https://codesandbox.io/s/pie-chart-of-two-levels-gor24';\n//   render() {\n//     return (\n//     );\n//   }\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["/Users/jingkangng/Documents/Y4S1/CG4002/dashboard/client/src/components/Session/DoughnutChart.js"],"names":["React","useState","useEffect","PieChart","Pie","Sector","Cell","ResponsiveContainer","Tooltip","COLORS","data","name","value","Chart","height","width","map","entry","index","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,QAAT,EAAmBC,GAAnB,EAAwBC,MAAxB,EAAgCC,IAAhC,EAAsCC,mBAAtC,EAA2DC,OAA3D,QAA0E,UAA1E;;AAEA,MAAMC,MAAM,GAAG,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,CAAf;AAEA,MAAMC,IAAI,GAAG,CACX;AAAEC,EAAAA,IAAI,EAAE,IAAR;AAAcC,EAAAA,KAAK,EAAE;AAArB,CADW,EAEX;AAAED,EAAAA,IAAI,EAAE,IAAR;AAAcC,EAAAA,KAAK,EAAE;AAArB,CAFW,CAAb;;AAMA,MAAMC,KAAK,GAAG,MAAM;AAChB;AACA,sBACI;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,MAAM,EAAC,OAAR;AAAiBC,MAAAA,KAAK,EAAC;AAAvB,KAAZ;AAAA,2BACF,QAAC,mBAAD;AAAqB,MAAA,KAAK,EAAC,MAA3B;AAAkC,MAAA,MAAM,EAAC,MAAzC;AAAA,6BACE,QAAC,QAAD;AAAA,gCACA,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBADA,eAGE,QAAC,GAAD;AAAK,UAAA,IAAI,EAAEL,IAAX;AAAiB,UAAA,OAAO,EAAC,OAAzB;AAAkC,UAAA,WAAW,EAAE,EAA/C;AAAmD,UAAA,WAAW,EAAE,EAAhE;AAAoE,UAAA,KAAK,MAAzE;AAAA,oBACCA,IAAI,CAACM,GAAL,CAAS,CAACC,KAAD,EAAQC,KAAR,kBACN,QAAC,IAAD;AAA4B,YAAA,IAAI,EAAET,MAAM,CAACS,KAAK,GAAGT,MAAM,CAACU,MAAhB;AAAxC,aAAY,QAAOD,KAAM,EAAzB;AAAA;AAAA;AAAA;AAAA,kBADH;AADD;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADE;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CAjBD;;KAAML,K;AAmBN,eAAeA,KAAf,C,CAEA;AACA;AAEA;AACA;AAEA;AACA;AACA","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { PieChart, Pie, Sector, Cell, ResponsiveContainer, Tooltip } from 'recharts';\n\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\n\nconst data = [\n  { name: 'A1', value: 100 },\n  { name: 'A2', value: 300 },\n];\n\n\nconst Chart = () => {\n    // const [data, setData] = useState()\n    return ( \n        <div style={{height:'300px', width:'300px'}}>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <PieChart >\n        <Tooltip />\n          {/* <Pie data={data01} dataKey=\"value\" cx=\"50%\" cy=\"50%\" outerRadius={60} fill=\"#8884d8\" /> */}\n          <Pie data={data} dataKey=\"value\"  innerRadius={70} outerRadius={90} label>\n          {data.map((entry, index) => (\n              <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n            ))}\n          </Pie>\n        </PieChart>\n      </ResponsiveContainer>\n      </div>\n     );\n}\n \nexport default Chart;\n\n// export default class Example extends PureComponent {\n//   static demoUrl = 'https://codesandbox.io/s/pie-chart-of-two-levels-gor24';\n\n//   render() {\n//     return (\n        \n//     );\n//   }\n// }\n"]},"metadata":{},"sourceType":"module"}
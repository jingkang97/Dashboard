{"ast":null,"code":"var _jsxFileName = \"/Users/jingkangng/Documents/Y4S1/CG4002/dashboard/client/src/components/Overview/Graph.js\";\nimport React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport \"chartjs-plugin-streaming\";\nimport \"./styles.css\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  const Chart = require(\"react-chartjs-2\").Chart;\n\n  const chartColors = {\n    red: \"rgb(255, 99, 132)\",\n    orange: \"rgb(255, 159, 64)\",\n    yellow: \"rgb(255, 205, 86)\",\n    green: \"rgb(75, 192, 192)\",\n    blue: \"rgb(54, 162, 235)\",\n    purple: \"rgb(153, 102, 255)\",\n    grey: \"rgb(201, 203, 207)\"\n  };\n  const color = Chart.helpers.color;\n  const data = {\n    datasets: [{\n      label: \"Dataset 1 (linear interpolation)\",\n      backgroundColor: chartColors.red,\n      borderColor: chartColors.red,\n      fill: false,\n      lineTension: 0,\n      borderDash: [8, 4],\n      data: []\n    }]\n  };\n  const options = {\n    elements: {\n      line: {\n        tension: 0.5\n      }\n    },\n    scales: {\n      xAxes: [{\n        type: \"realtime\",\n        distribution: \"linear\",\n        realtime: {\n          onRefresh: function (chart) {\n            chart.data.datasets[0].data.push({\n              x: moment(),\n              y: Math.random()\n            });\n          },\n          delay: 3000,\n          time: {\n            displayFormat: \"h:mm\"\n          }\n        },\n        ticks: {\n          displayFormats: 1,\n          maxRotation: 0,\n          minRotation: 0,\n          stepSize: 1,\n          maxTicksLimit: 30,\n          minUnit: \"second\",\n          source: \"auto\",\n          autoSkip: true,\n          callback: function (value) {\n            return moment(value, \"HH:mm:ss\").format(\"mm:ss\");\n          }\n        }\n      }],\n      yAxes: [{\n        ticks: {\n          beginAtZero: true,\n          max: 1\n        }\n      }]\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: data,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jingkangng/Documents/Y4S1/CG4002/dashboard/client/src/components/Overview/Graph.js"],"names":["React","Line","moment","App","Chart","require","chartColors","red","orange","yellow","green","blue","purple","grey","color","helpers","data","datasets","label","backgroundColor","borderColor","fill","lineTension","borderDash","options","elements","line","tension","scales","xAxes","type","distribution","realtime","onRefresh","chart","push","x","y","Math","random","delay","time","displayFormat","ticks","displayFormats","maxRotation","minRotation","stepSize","maxTicksLimit","minUnit","source","autoSkip","callback","value","format","yAxes","beginAtZero","max"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport \"chartjs-plugin-streaming\";\nimport \"./styles.css\";\nimport moment from \"moment\";\n\n\n\nfunction App() {\n    const Chart = require(\"react-chartjs-2\").Chart;\n\nconst chartColors = {\n  red: \"rgb(255, 99, 132)\",\n  orange: \"rgb(255, 159, 64)\",\n  yellow: \"rgb(255, 205, 86)\",\n  green: \"rgb(75, 192, 192)\",\n  blue: \"rgb(54, 162, 235)\",\n  purple: \"rgb(153, 102, 255)\",\n  grey: \"rgb(201, 203, 207)\"\n};\n\nconst color = Chart.helpers.color;\nconst data = {\n  datasets: [\n    {\n      label: \"Dataset 1 (linear interpolation)\",\n      backgroundColor: chartColors.red,\n      borderColor: chartColors.red,\n      fill: false,\n      lineTension: 0,\n      borderDash: [8, 4],\n      data: []\n    }\n  ]\n};\n\nconst options = {\n  elements: {\n    line: {\n      tension: 0.5\n    }\n  },\n  scales: {\n    xAxes: [\n      {\n        type: \"realtime\",\n        distribution: \"linear\",\n        realtime: {\n          onRefresh: function (chart) {\n            chart.data.datasets[0].data.push({\n              x: moment(),\n              y: Math.random()\n            });\n          },\n          delay: 3000,\n          time: {\n            displayFormat: \"h:mm\"\n          }\n        },\n        ticks: {\n          displayFormats: 1,\n          maxRotation: 0,\n          minRotation: 0,\n          stepSize: 1,\n          maxTicksLimit: 30,\n          minUnit: \"second\",\n          source: \"auto\",\n          autoSkip: true,\n          callback: function (value) {\n            return moment(value, \"HH:mm:ss\").format(\"mm:ss\");\n          }\n        }\n      }\n    ],\n    yAxes: [\n      {\n        ticks: {\n          beginAtZero: true,\n          max: 1\n        }\n      }\n    ]\n  }\n};\n  return (\n    <div className=\"App\">\n      <Line data={data} options={options} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
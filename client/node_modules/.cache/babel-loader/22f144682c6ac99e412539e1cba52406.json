{"ast":null,"code":"var _jsxFileName = \"/Users/jingkangng/Documents/Y4S1/CG4002/dashboard/client/src/components/mqtt/Connection.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Card, Button, Form, Input, Row, Col } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Connection = ({\n  connect,\n  disconnect,\n  connectBtn\n}) => {\n  _s();\n\n  const [form] = Form.useForm();\n  const record = {\n    host: 'broker.emqx.io',\n    clientId: `mqttjs_ + ${Math.random().toString(16).substr(2, 8)}`,\n    port: 8083\n  };\n\n  const handleConnect = values => {\n    const {\n      host,\n      clientId,\n      port\n    } = record;\n    const url = `ws://${host}:${port}/mqtt`;\n    const options = {\n      keepalive: 30,\n      protocolId: 'MQTT',\n      protocolVersion: 4,\n      clean: true,\n      reconnectPeriod: 1000,\n      connectTimeout: 30 * 1000,\n      will: {\n        topic: 'WillMsg',\n        payload: 'Connection Closed abnormally..!',\n        qos: 0,\n        retain: false\n      },\n      rejectUnauthorized: false\n    };\n    options.clientId = clientId;\n    connect(url, options);\n  }; // const handleConnect = () => {\n  //   form.submit();\n  // };\n\n\n  const handleDisconnect = () => {\n    disconnect();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    title: \"Connection\",\n    actions: [/*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      onClick: handleConnect,\n      children: connectBtn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      danger: true,\n      onClick: handleDisconnect,\n      children: \"Disconnect\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Connection, \"rI7DrJIrFu7YmlGWYiMFTzs8jF0=\", false, function () {\n  return [Form.useForm];\n});\n\n_c = Connection;\nexport default Connection;\n\nvar _c;\n\n$RefreshReg$(_c, \"Connection\");","map":{"version":3,"sources":["/Users/jingkangng/Documents/Y4S1/CG4002/dashboard/client/src/components/mqtt/Connection.js"],"names":["React","Card","Button","Form","Input","Row","Col","Connection","connect","disconnect","connectBtn","form","useForm","record","host","clientId","Math","random","toString","substr","port","handleConnect","values","url","options","keepalive","protocolId","protocolVersion","clean","reconnectPeriod","connectTimeout","will","topic","payload","qos","retain","rejectUnauthorized","handleDisconnect"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,IAAvB,EAA6BC,KAA7B,EAAoCC,GAApC,EAAyCC,GAAzC,QAAoD,MAApD;;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,UAAX;AAAuBC,EAAAA;AAAvB,CAAD,KAAyC;AAAA;;AAC1D,QAAM,CAACC,IAAD,IAASR,IAAI,CAACS,OAAL,EAAf;AAGA,QAAMC,MAAM,GAAG;AACbC,IAAAA,IAAI,EAAE,gBADO;AAEbC,IAAAA,QAAQ,EAAG,aAAYC,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,MAA3B,CAAkC,CAAlC,EAAqC,CAArC,CAAwC,EAFlD;AAGbC,IAAAA,IAAI,EAAE;AAHO,GAAf;;AAKA,QAAMC,aAAa,GAAIC,MAAD,IAAY;AAChC,UAAM;AAAER,MAAAA,IAAF;AAAQC,MAAAA,QAAR;AAAkBK,MAAAA;AAAlB,QAA2BP,MAAjC;AACA,UAAMU,GAAG,GAAI,QAAOT,IAAK,IAAGM,IAAK,OAAjC;AACA,UAAMI,OAAO,GAAG;AACdC,MAAAA,SAAS,EAAE,EADG;AAEdC,MAAAA,UAAU,EAAE,MAFE;AAGdC,MAAAA,eAAe,EAAE,CAHH;AAIdC,MAAAA,KAAK,EAAE,IAJO;AAKdC,MAAAA,eAAe,EAAE,IALH;AAMdC,MAAAA,cAAc,EAAE,KAAK,IANP;AAOdC,MAAAA,IAAI,EAAE;AACJC,QAAAA,KAAK,EAAE,SADH;AAEJC,QAAAA,OAAO,EAAE,iCAFL;AAGJC,QAAAA,GAAG,EAAE,CAHD;AAIJC,QAAAA,MAAM,EAAE;AAJJ,OAPQ;AAadC,MAAAA,kBAAkB,EAAE;AAbN,KAAhB;AAeAZ,IAAAA,OAAO,CAACT,QAAR,GAAmBA,QAAnB;AACAP,IAAAA,OAAO,CAACe,GAAD,EAAMC,OAAN,CAAP;AACD,GApBD,CAT0D,CA+B1D;AACA;AACA;;;AAEA,QAAMa,gBAAgB,GAAG,MAAM;AAC7B5B,IAAAA,UAAU;AACX,GAFD;;AAIA,sBACE,QAAC,IAAD;AACE,IAAA,KAAK,EAAC,YADR;AAEE,IAAA,OAAO,EAAE,cACP,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,OAAO,EAAEY,aAAhC;AAAA,gBAAgDX;AAAhD;AAAA;AAAA;AAAA;AAAA,YADO,eAEP,QAAC,MAAD;AAAQ,MAAA,MAAM,MAAd;AAAe,MAAA,OAAO,EAAE2B,gBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFO;AAFX;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAlDD;;GAAM9B,U;UACWJ,IAAI,CAACS,O;;;KADhBL,U;AAoDN,eAAeA,UAAf","sourcesContent":["import React from 'react';\nimport { Card, Button, Form, Input, Row, Col } from 'antd';\n\nconst Connection = ({ connect, disconnect, connectBtn }) => {\n  const [form] = Form.useForm();\n\n\n  const record = {\n    host: 'broker.emqx.io',\n    clientId: `mqttjs_ + ${Math.random().toString(16).substr(2, 8)}`,\n    port: 8083,\n  };\n  const handleConnect = (values) => {\n    const { host, clientId, port } = record;\n    const url = `ws://${host}:${port}/mqtt`;\n    const options = {\n      keepalive: 30,\n      protocolId: 'MQTT',\n      protocolVersion: 4,\n      clean: true,\n      reconnectPeriod: 1000,\n      connectTimeout: 30 * 1000,\n      will: {\n        topic: 'WillMsg',\n        payload: 'Connection Closed abnormally..!',\n        qos: 0,\n        retain: false\n      },\n      rejectUnauthorized: false\n    };\n    options.clientId = clientId;\n    connect(url, options);\n  };\n\n  // const handleConnect = () => {\n  //   form.submit();\n  // };\n\n  const handleDisconnect = () => {\n    disconnect();\n  };\n\n  return (\n    <Card\n      title=\"Connection\"\n      actions={[\n        <Button type=\"primary\" onClick={handleConnect}>{connectBtn}</Button>,\n        <Button danger onClick={handleDisconnect}>Disconnect</Button>\n      ]}\n    >\n      {/* {ConnectionForm} */}\n    </Card>\n  );\n}\n\nexport default Connection;"]},"metadata":{},"sourceType":"module"}
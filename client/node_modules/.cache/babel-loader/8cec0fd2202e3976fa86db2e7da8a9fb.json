{"ast":null,"code":"var _jsxFileName = \"/Users/jingkangng/Documents/Y4S1/CG4002/dashboard/client/src/components/Session/SyncGraph.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { render } from \"react-dom\";\nimport { LineChart, Line, XAxis, YAxis, ReferenceLine, AreaChart, Area, Tooltip } from \"recharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = {\n  fontFamily: \"sans-serif\",\n  textAlign: \"center\"\n};\nconst data = [];\nconst launchDate = 2004;\nconst rand = 300;\n\nfor (let i = 0; i < 7; i++) {\n  const year = 2000 + i;\n  const value = Math.random() * (rand + 50) + 100;\n  let d = {\n    year: year,\n    value: value\n  };\n  data.push(d);\n} // change type to see that the overlap might not be appropriate towards the\n// end of the shorter chart\n\n\nconst type = \"monotone\"; // calculate percentage for launchDate - index = 4, total = 7\n\nconst percentage = 100 - (7 - 4 - 1) / (7 - 1) * 100;\n\nconst SyncGraph = ({\n  syncData\n}) => {\n  _s();\n\n  const [percent, setPercent] = useState(100);\n\n  const calculatePercentage = () => {\n    let maximum = 0;\n\n    for (let i = 0; i < syncData.length; i++) {\n      maximum = Math.max(syncData[i].sync, maximum);\n    }\n\n    if (maximum > 1) {\n      setPercent((maximum - 1) * 100);\n    }\n  };\n\n  useEffect(() => {\n    if (syncData.length) {\n      calculatePercentage();\n    }\n  }, [syncData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles,\n    children: [alert(percent), console.log(syncData), /*#__PURE__*/_jsxDEV(AreaChart, {\n      width: 500,\n      height: 300,\n      data: syncData,\n      margin: {\n        top: 5,\n        right: 20,\n        bottom: 5,\n        left: 0\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"defs\", {\n        children: /*#__PURE__*/_jsxDEV(\"linearGradient\", {\n          id: \"gradients\",\n          x1: \"0\",\n          y1: \"0\",\n          x2: \"0\",\n          y2: \"1\",\n          children: [/*#__PURE__*/_jsxDEV(\"stop\", {\n            offset: `${percent}%`,\n            stopColor: \"#ff6d98\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"stop\", {\n            offset: `${100}%`,\n            stopColor: \"#5A65EA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ReferenceLine, {\n        y: 1,\n        label: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: 'white'\n          },\n          children: \"Exceed Threshold\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Area, {\n        type: type,\n        dataKey: \"sync\",\n        fill: \"url(#gradients)\",\n        stroke: \"url(#gradients)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n        dataKey: \"sync\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SyncGraph, \"Wfz/CStwrSYZ7VjoYpztfWG6s08=\");\n\n_c = SyncGraph;\nexport default SyncGraph;\n\nvar _c;\n\n$RefreshReg$(_c, \"SyncGraph\");","map":{"version":3,"sources":["/Users/jingkangng/Documents/Y4S1/CG4002/dashboard/client/src/components/Session/SyncGraph.js"],"names":["React","useState","useEffect","render","LineChart","Line","XAxis","YAxis","ReferenceLine","AreaChart","Area","Tooltip","styles","fontFamily","textAlign","data","launchDate","rand","i","year","value","Math","random","d","push","type","percentage","SyncGraph","syncData","percent","setPercent","calculatePercentage","maximum","length","max","sync","alert","console","log","top","right","bottom","left","color"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport { render } from \"react-dom\";\n\nimport { LineChart, Line, XAxis, YAxis, ReferenceLine, AreaChart, Area, Tooltip} from \"recharts\";\n\nconst styles = {\n  fontFamily: \"sans-serif\",\n  textAlign: \"center\"\n};\n\nconst data = [];\nconst launchDate = 2004;\n\nconst rand = 300;\nfor (let i = 0; i < 7; i++) {\n  const year = 2000 + i;\n  const value = Math.random() * (rand + 50) + 100;\n  let d = {\n    year: year,\n    value: value\n  };\n\n  data.push(d);\n}\n\n// change type to see that the overlap might not be appropriate towards the\n// end of the shorter chart\nconst type = \"monotone\";\n\n// calculate percentage for launchDate - index = 4, total = 7\nconst percentage = 100 - ((7 - 4 - 1) / (7 - 1)) * 100;\n\nconst SyncGraph = ({syncData}) => {\n    const [percent, setPercent] = useState(100)\n    const calculatePercentage = () => {\n        let maximum = 0\n        for(let i = 0; i < syncData.length; i ++){\n            maximum = Math.max(syncData[i].sync, maximum)\n        }\n        if(maximum > 1){\n            setPercent((maximum - 1) * 100)\n        }\n    }\n    useEffect(() => {\n        if(syncData.length){\n            calculatePercentage()\n        }\n        \n    }, [syncData])\n    return ( \n        <div style={styles}>\n            {alert(percent)}\n            {console.log(syncData)}\n            <AreaChart\n            width={500}\n            height={300}\n            data={syncData}\n            margin={{ top: 5, right: 20, bottom: 5, left: 0 }}\n            >\n                <defs>\n            <linearGradient id=\"gradients\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                {/* <stop offset=\"0%\" stopColor=\"#5A65EA\" /> */}\n                <stop offset={`${percent}%`} stopColor=\"#ff6d98\" />\n                <stop offset={`${100}%`} stopColor=\"#5A65EA\"  />\n\n                {/* <stop offset=\"100%\" stopColor=\"#ff6d98\" /> */}\n            </linearGradient>\n                \n            </defs>\n            <Tooltip />\n            <ReferenceLine y={1} label={<div style={{color:'white'}}>Exceed Threshold</div>} />\n            {/* <Area type={type} dataKey=\"sync\" fill=\"#5A65EA\" stroke=\"#5A65EA\"/> */}\n            <Area type={type} dataKey=\"sync\" fill=\"url(#gradients)\" stroke=\"url(#gradients)\"/>\n            <XAxis dataKey=\"time\" />\n            <YAxis dataKey=\"sync\"/>\n            </AreaChart>\n        </div>\n     );\n}\n \nexport default SyncGraph;\n"]},"metadata":{},"sourceType":"module"}
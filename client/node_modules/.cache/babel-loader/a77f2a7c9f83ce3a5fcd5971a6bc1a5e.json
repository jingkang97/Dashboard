{"ast":null,"code":"var _jsxFileName = \"/Users/jingkangng/Documents/Y4S1/CG4002/dashboard/client/src/components/mqtt_test/connection.js\";\nimport React from \"react\";\nimport { Card, Button } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Connection extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleConnect = () => {\n      const {\n        host,\n        clientId,\n        port\n      } = this.state.record;\n      const url = `ws://${host}:${port}/mqtt`;\n      const options = {\n        keepalive: 30,\n        protocolId: \"MQTT\",\n        protocolVersion: 4,\n        clean: true,\n        reconnectPeriod: 1000,\n        connectTimeout: 30 * 1000,\n        will: {\n          topic: \"WillMsg\",\n          payload: \"Connection Closed abnormally..!\",\n          qos: 0,\n          retain: false\n        },\n        rejectUnauthorized: false\n      };\n      options.clientId = clientId;\n      this.props.connect(url, options);\n    };\n\n    this.state = {\n      record: {\n        host: \"broker.emqx.io\",\n        clientId: `mqttjs_ + ${Math.random().toString(16).substr(2, 8)}`,\n        port: 8083\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      title: \"Device Connection\",\n      actions: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: this.handleConnect,\n        children: this.props.connectBtn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        danger: true,\n        onClick: this.props.disconnect,\n        children: \"Disconnect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Connection;","map":{"version":3,"sources":["/Users/jingkangng/Documents/Y4S1/CG4002/dashboard/client/src/components/mqtt_test/connection.js"],"names":["React","Card","Button","Connection","Component","constructor","props","handleConnect","host","clientId","port","state","record","url","options","keepalive","protocolId","protocolVersion","clean","reconnectPeriod","connectTimeout","will","topic","payload","qos","retain","rejectUnauthorized","connect","Math","random","toString","substr","render","connectBtn","disconnect"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,MAA7B;;;AAEA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAWnBC,aAXmB,GAWH,MAAM;AACpB,YAAM;AAAEC,QAAAA,IAAF;AAAQC,QAAAA,QAAR;AAAkBC,QAAAA;AAAlB,UAA2B,KAAKC,KAAL,CAAWC,MAA5C;AACA,YAAMC,GAAG,GAAI,QAAOL,IAAK,IAAGE,IAAK,OAAjC;AACA,YAAMI,OAAO,GAAG;AACdC,QAAAA,SAAS,EAAE,EADG;AAEdC,QAAAA,UAAU,EAAE,MAFE;AAGdC,QAAAA,eAAe,EAAE,CAHH;AAIdC,QAAAA,KAAK,EAAE,IAJO;AAKdC,QAAAA,eAAe,EAAE,IALH;AAMdC,QAAAA,cAAc,EAAE,KAAK,IANP;AAOdC,QAAAA,IAAI,EAAE;AACJC,UAAAA,KAAK,EAAE,SADH;AAEJC,UAAAA,OAAO,EAAE,iCAFL;AAGJC,UAAAA,GAAG,EAAE,CAHD;AAIJC,UAAAA,MAAM,EAAE;AAJJ,SAPQ;AAadC,QAAAA,kBAAkB,EAAE;AAbN,OAAhB;AAeAZ,MAAAA,OAAO,CAACL,QAAR,GAAmBA,QAAnB;AACA,WAAKH,KAAL,CAAWqB,OAAX,CAAmBd,GAAnB,EAAwBC,OAAxB;AACD,KA/BkB;;AAEjB,SAAKH,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE;AACNJ,QAAAA,IAAI,EAAE,gBADA;AAENC,QAAAA,QAAQ,EAAG,aAAYmB,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,MAA3B,CAAkC,CAAlC,EAAqC,CAArC,CAAwC,EAFzD;AAGNrB,QAAAA,IAAI,EAAE;AAHA;AADG,KAAb;AAOD;;AAwBDsB,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,IAAD;AACE,MAAA,KAAK,EAAC,mBADR;AAEE,MAAA,OAAO,EAAE,cACP,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAuB,QAAA,OAAO,EAAE,KAAKzB,aAArC;AAAA,kBACG,KAAKD,KAAL,CAAW2B;AADd;AAAA;AAAA;AAAA;AAAA,cADO,eAIP,QAAC,MAAD;AAAQ,QAAA,MAAM,MAAd;AAAe,QAAA,OAAO,EAAE,KAAK3B,KAAL,CAAW4B,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJO;AAFX;AAAA;AAAA;AAAA;AAAA,YADF;AAcD;;AAjDsC;;AAoDzC,eAAe/B,UAAf","sourcesContent":["import React from \"react\";\r\nimport { Card, Button } from \"antd\";\r\n\r\nclass Connection extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      record: {\r\n        host: \"broker.emqx.io\",\r\n        clientId: `mqttjs_ + ${Math.random().toString(16).substr(2, 8)}`,\r\n        port: 8083,\r\n      },\r\n    };\r\n  }\r\n\r\n  handleConnect = () => {\r\n    const { host, clientId, port } = this.state.record;\r\n    const url = `ws://${host}:${port}/mqtt`;\r\n    const options = {\r\n      keepalive: 30,\r\n      protocolId: \"MQTT\",\r\n      protocolVersion: 4,\r\n      clean: true,\r\n      reconnectPeriod: 1000,\r\n      connectTimeout: 30 * 1000,\r\n      will: {\r\n        topic: \"WillMsg\",\r\n        payload: \"Connection Closed abnormally..!\",\r\n        qos: 0,\r\n        retain: false,\r\n      },\r\n      rejectUnauthorized: false,\r\n    };\r\n    options.clientId = clientId;\r\n    this.props.connect(url, options);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Card\r\n        title=\"Device Connection\"\r\n        actions={[\r\n          <Button type=\"primary\" onClick={this.handleConnect}>\r\n            {this.props.connectBtn}\r\n          </Button>,\r\n          <Button danger onClick={this.props.disconnect}>\r\n            Disconnect\r\n          </Button>\r\n        ]}\r\n      >\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Connection;"]},"metadata":{},"sourceType":"module"}
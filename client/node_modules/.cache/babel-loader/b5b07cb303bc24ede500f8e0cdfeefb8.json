{"ast":null,"code":"var _jsxFileName = \"/Users/jingkangng/Documents/Y4S1/CG4002/dashboard/client/src/components/Overview/Graph.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Bar, Line, Pie } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BarExample() {\n  _s();\n\n  // set data\n  const [barData, setBarData] = useState({\n    labels: ['label 1', 'label 2', 'label 3', 'label 4'],\n    datasets: [{\n      label: 'test label',\n      data: [48, 35, 73, 82],\n      backgroundColor: ['rgba(255, 99, 132, 0.6)', 'rgba(54, 162, 235, 0.6)', 'rgba(255, 206, 86, 0.6)', 'rgba(75, 192, 192, 0.6)'],\n      borderWidth: 3\n    }]\n  }); // set options\n\n  const [barOptions, setBarOptions] = useState({\n    options: {\n      scales: {\n        yAxes: [{\n          ticks: {\n            beginAtZero: true\n          }\n        }]\n      },\n      title: {\n        display: true,\n        text: 'Data Orgranized In Bars',\n        fontSize: 25\n      },\n      legend: {\n        display: true,\n        position: 'top'\n      }\n    }\n  }); // return JSX\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"BarExample\",\n    children: /*#__PURE__*/_jsxDEV(Bar, {\n      data: chartData,\n      options: options.options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n\n_s(BarExample, \"/u/H114nZ7C7kUbIKpc2xvXbGH0=\");\n\n_c = BarExample;\nexport default BarExample;\n\nvar _c;\n\n$RefreshReg$(_c, \"BarExample\");","map":{"version":3,"sources":["/Users/jingkangng/Documents/Y4S1/CG4002/dashboard/client/src/components/Overview/Graph.js"],"names":["React","useState","Bar","Line","Pie","BarExample","barData","setBarData","labels","datasets","label","data","backgroundColor","borderWidth","barOptions","setBarOptions","options","scales","yAxes","ticks","beginAtZero","title","display","text","fontSize","legend","position","chartData"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,GAApB,QAA+B,iBAA/B;;;AAGA,SAASC,UAAT,GAAsB;AAAA;;AAClB;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC;AACnCO,IAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,CAD2B;AAEnCC,IAAAA,QAAQ,EAAE,CACN;AACIC,MAAAA,KAAK,EAAE,YADX;AAEIC,MAAAA,IAAI,EAAE,CACF,EADE,EAEF,EAFE,EAGF,EAHE,EAIF,EAJE,CAFV;AAQIC,MAAAA,eAAe,EAAE,CACb,yBADa,EAEb,yBAFa,EAGb,yBAHa,EAIb,yBAJa,CARrB;AAcIC,MAAAA,WAAW,EAAE;AAdjB,KADM;AAFyB,GAAD,CAAtC,CAFkB,CAuBlB;;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8Bd,QAAQ,CAAC;AACzCe,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE;AACJC,QAAAA,KAAK,EAAE,CACH;AACIC,UAAAA,KAAK,EAAE;AACHC,YAAAA,WAAW,EAAE;AADV;AADX,SADG;AADH,OADH;AAULC,MAAAA,KAAK,EAAE;AACHC,QAAAA,OAAO,EAAE,IADN;AAEHC,QAAAA,IAAI,EAAE,yBAFH;AAGHC,QAAAA,QAAQ,EAAE;AAHP,OAVF;AAeLC,MAAAA,MAAM,EAAE;AACJH,QAAAA,OAAO,EAAE,IADL;AAEJI,QAAAA,QAAQ,EAAE;AAFN;AAfH;AADgC,GAAD,CAA5C,CAxBkB,CA+ClB;;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,2BACI,QAAC,GAAD;AACI,MAAA,IAAI,EAAEC,SADV;AAEI,MAAA,OAAO,EAAEX,OAAO,CAACA;AAFrB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GAvDQX,U;;KAAAA,U;AAyDT,eAAeA,UAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Bar, Line, Pie } from 'react-chartjs-2';\n\n\nfunction BarExample() {\n    // set data\n    const [barData, setBarData] = useState({\n        labels: ['label 1', 'label 2', 'label 3', 'label 4'],\n        datasets: [\n            {\n                label: 'test label',\n                data: [\n                    48,\n                    35,\n                    73,\n                    82\n                ],\n                backgroundColor: [\n                    'rgba(255, 99, 132, 0.6)',\n                    'rgba(54, 162, 235, 0.6)',\n                    'rgba(255, 206, 86, 0.6)',\n                    'rgba(75, 192, 192, 0.6)'\n                ],\n                borderWidth: 3\n            }\n        ]\n    });\n    // set options\n    const [barOptions, setBarOptions] = useState({\n        options: {\n            scales: {\n                yAxes: [\n                    {\n                        ticks: {\n                            beginAtZero: true\n                        }\n                    }\n                ]\n            },\n            title: {\n                display: true,\n                text: 'Data Orgranized In Bars',\n                fontSize: 25\n            },\n            legend: {\n                display: true,\n                position: 'top'\n            }\n        }\n    });\n\n    // return JSX\n    return (\n        <div className=\"BarExample\">\n            <Bar\n                data={chartData}\n                options={options.options} />\n        </div>\n    );\n}\n\nexport default BarExample"]},"metadata":{},"sourceType":"module"}
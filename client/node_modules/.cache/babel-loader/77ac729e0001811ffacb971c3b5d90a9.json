{"ast":null,"code":"var _jsxFileName = \"/Users/jingkangng/Documents/Y4S1/CG4002/dashboard/client/src/components/Overview/Graph.js\";\nimport React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport \"chartjs-plugin-streaming\";\nimport \"./styles.css\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chart = require(\"react-chartjs-2\").Chart;\n\nconst chartColors = {\n  red: \"rgb(255, 99, 132)\",\n  orange: \"rgb(255, 159, 64)\",\n  yellow: \"rgb(255, 205, 86)\",\n  green: \"rgb(75, 192, 192)\",\n  blue: \"rgb(54, 162, 235)\",\n  purple: \"rgb(153, 102, 255)\",\n  grey: \"rgb(201, 203, 207)\"\n}; // const color = Chart.helpers.color;\n\nconst data = canvas => {\n  const ctx = canvas.getContext('2d');\n  const gradient = ctx.createLinearGradient(0, 0, 100, 0);\n  return {\n    datasets: [{\n      label: \"Dataset 1 (linear interpolation)\",\n      backgroundColor: chartColors.red,\n      borderColor: chartColors.red,\n      fill: false,\n      lineTension: 0,\n      borderDash: [8, 4],\n      data: []\n    }]\n  };\n};\n\nconst options = {\n  elements: {\n    line: {\n      tension: 0.5\n    }\n  },\n  scales: {\n    xAxes: [{\n      type: \"realtime\",\n      distribution: \"linear\",\n      realtime: {\n        onRefresh: function (chart) {\n          chart.data.datasets[0].data.push({\n            x: moment(),\n            y: Math.random()\n          });\n        },\n        delay: 3000,\n        time: {\n          displayFormat: \"h:mm\"\n        }\n      },\n      ticks: {\n        displayFormats: 1,\n        maxRotation: 0,\n        minRotation: 0,\n        stepSize: 1,\n        maxTicksLimit: 30,\n        minUnit: \"second\",\n        source: \"auto\",\n        autoSkip: true,\n        callback: function (value) {\n          return moment(value, \"HH:mm:ss\").format(\"mm:ss\");\n        }\n      }\n    }],\n    yAxes: [{\n      ticks: {\n        beginAtZero: true,\n        max: 1\n      }\n    }]\n  }\n};\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: data,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jingkangng/Documents/Y4S1/CG4002/dashboard/client/src/components/Overview/Graph.js"],"names":["React","Line","moment","Chart","require","chartColors","red","orange","yellow","green","blue","purple","grey","data","canvas","ctx","getContext","gradient","createLinearGradient","datasets","label","backgroundColor","borderColor","fill","lineTension","borderDash","options","elements","line","tension","scales","xAxes","type","distribution","realtime","onRefresh","chart","push","x","y","Math","random","delay","time","displayFormat","ticks","displayFormats","maxRotation","minRotation","stepSize","maxTicksLimit","minUnit","source","autoSkip","callback","value","format","yAxes","beginAtZero","max","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAO,0BAAP;AACA,OAAO,cAAP;AACA,OAAOC,MAAP,MAAmB,QAAnB;;;AAEA,MAAMC,KAAK,GAAGC,OAAO,CAAC,iBAAD,CAAP,CAA2BD,KAAzC;;AAEA,MAAME,WAAW,GAAG;AAClBC,EAAAA,GAAG,EAAE,mBADa;AAElBC,EAAAA,MAAM,EAAE,mBAFU;AAGlBC,EAAAA,MAAM,EAAE,mBAHU;AAIlBC,EAAAA,KAAK,EAAE,mBAJW;AAKlBC,EAAAA,IAAI,EAAE,mBALY;AAMlBC,EAAAA,MAAM,EAAE,oBANU;AAOlBC,EAAAA,IAAI,EAAE;AAPY,CAApB,C,CAUA;;AACA,MAAMC,IAAI,GAAGC,MAAM,IAAI;AAEnB,QAAMC,GAAG,GAAGD,MAAM,CAACE,UAAP,CAAkB,IAAlB,CAAZ;AACA,QAAMC,QAAQ,GAAGF,GAAG,CAACG,oBAAJ,CAAyB,CAAzB,EAA2B,CAA3B,EAA6B,GAA7B,EAAiC,CAAjC,CAAjB;AACA,SAAO;AACHC,IAAAA,QAAQ,EAAE,CAAC;AACPC,MAAAA,KAAK,EAAE,kCADA;AAEbC,MAAAA,eAAe,EAAEhB,WAAW,CAACC,GAFhB;AAGbgB,MAAAA,WAAW,EAAEjB,WAAW,CAACC,GAHZ;AAIbiB,MAAAA,IAAI,EAAE,KAJO;AAKbC,MAAAA,WAAW,EAAE,CALA;AAMbC,MAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CANC;AAObZ,MAAAA,IAAI,EAAE;AAPO,KAAD;AADP,GAAP;AAWH,CAfD;;AAiBA,MAAMa,OAAO,GAAG;AACdC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,IAAI,EAAE;AACJC,MAAAA,OAAO,EAAE;AADL;AADE,GADI;AAMdC,EAAAA,MAAM,EAAE;AACNC,IAAAA,KAAK,EAAE,CACL;AACEC,MAAAA,IAAI,EAAE,UADR;AAEEC,MAAAA,YAAY,EAAE,QAFhB;AAGEC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,SAAS,EAAE,UAAUC,KAAV,EAAiB;AAC1BA,UAAAA,KAAK,CAACvB,IAAN,CAAWM,QAAX,CAAoB,CAApB,EAAuBN,IAAvB,CAA4BwB,IAA5B,CAAiC;AAC/BC,YAAAA,CAAC,EAAEpC,MAAM,EADsB;AAE/BqC,YAAAA,CAAC,EAAEC,IAAI,CAACC,MAAL;AAF4B,WAAjC;AAID,SANO;AAORC,QAAAA,KAAK,EAAE,IAPC;AAQRC,QAAAA,IAAI,EAAE;AACJC,UAAAA,aAAa,EAAE;AADX;AARE,OAHZ;AAeEC,MAAAA,KAAK,EAAE;AACLC,QAAAA,cAAc,EAAE,CADX;AAELC,QAAAA,WAAW,EAAE,CAFR;AAGLC,QAAAA,WAAW,EAAE,CAHR;AAILC,QAAAA,QAAQ,EAAE,CAJL;AAKLC,QAAAA,aAAa,EAAE,EALV;AAMLC,QAAAA,OAAO,EAAE,QANJ;AAOLC,QAAAA,MAAM,EAAE,MAPH;AAQLC,QAAAA,QAAQ,EAAE,IARL;AASLC,QAAAA,QAAQ,EAAE,UAAUC,KAAV,EAAiB;AACzB,iBAAOrD,MAAM,CAACqD,KAAD,EAAQ,UAAR,CAAN,CAA0BC,MAA1B,CAAiC,OAAjC,CAAP;AACD;AAXI;AAfT,KADK,CADD;AAgCNC,IAAAA,KAAK,EAAE,CACL;AACEZ,MAAAA,KAAK,EAAE;AACLa,QAAAA,WAAW,EAAE,IADR;AAELC,QAAAA,GAAG,EAAE;AAFA;AADT,KADK;AAhCD;AANM,CAAhB;;AAiDA,SAASC,GAAT,GAAe;AACb,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAE/C,IAAZ;AAAkB,MAAA,OAAO,EAAEa;AAA3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;KANQkC,G;AAQT,eAAeA,GAAf","sourcesContent":["import React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport \"chartjs-plugin-streaming\";\nimport \"./styles.css\";\nimport moment from \"moment\";\n\nconst Chart = require(\"react-chartjs-2\").Chart;\n\nconst chartColors = {\n  red: \"rgb(255, 99, 132)\",\n  orange: \"rgb(255, 159, 64)\",\n  yellow: \"rgb(255, 205, 86)\",\n  green: \"rgb(75, 192, 192)\",\n  blue: \"rgb(54, 162, 235)\",\n  purple: \"rgb(153, 102, 255)\",\n  grey: \"rgb(201, 203, 207)\"\n};\n\n// const color = Chart.helpers.color;\nconst data = canvas => {\n\n    const ctx = canvas.getContext('2d')\n    const gradient = ctx.createLinearGradient(0,0,100,0);\n    return {\n        datasets: [{\n            label: \"Dataset 1 (linear interpolation)\",\n      backgroundColor: chartColors.red,\n      borderColor: chartColors.red,\n      fill: false,\n      lineTension: 0,\n      borderDash: [8, 4],\n      data: []\n        }],\n    };\n}\n\nconst options = {\n  elements: {\n    line: {\n      tension: 0.5\n    }\n  },\n  scales: {\n    xAxes: [\n      {\n        type: \"realtime\",\n        distribution: \"linear\",\n        realtime: {\n          onRefresh: function (chart) {\n            chart.data.datasets[0].data.push({\n              x: moment(),\n              y: Math.random()\n            });\n          },\n          delay: 3000,\n          time: {\n            displayFormat: \"h:mm\"\n          }\n        },\n        ticks: {\n          displayFormats: 1,\n          maxRotation: 0,\n          minRotation: 0,\n          stepSize: 1,\n          maxTicksLimit: 30,\n          minUnit: \"second\",\n          source: \"auto\",\n          autoSkip: true,\n          callback: function (value) {\n            return moment(value, \"HH:mm:ss\").format(\"mm:ss\");\n          }\n        }\n      }\n    ],\n    yAxes: [\n      {\n        ticks: {\n          beginAtZero: true,\n          max: 1\n        }\n      }\n    ]\n  }\n};\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Line data={data} options={options} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
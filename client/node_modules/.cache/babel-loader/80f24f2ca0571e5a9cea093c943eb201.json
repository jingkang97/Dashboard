{"ast":null,"code":"var _jsxFileName = \"/Users/jingkangng/Documents/Y4S1/CG4002/dashboard/client/src/components/Authorisation/Authorisation.js\";\nimport React, { Component } from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport decode from 'jwt-decode';\nimport Login from '../Login/Login';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Authentication = Page => {\n  return class extends Component {\n    constructor() {\n      super();\n      const token = localStorage.getItem('token');\n      let decodedToken = 0;\n      console.log('token', token);\n\n      if (token == null) {\n        console.log('no token');\n      } else {\n        console.log('tokennnn'); // decodedToken = decode(localStorage.getItem('token'))\n      } // const decodedToken = localStorage.getItem('token')  ? decode(localStorage.getItem('token')) : null\n\n\n      this.state = {\n        // authorised: token ? (decodedToken.exp * 1000 > new Date().getTime()) : false\n        authorised: false\n      };\n    }\n\n    componentDidMount() {\n      // console.log(localStorage.getItem('token') ? new Date(decode(localStorage.getItem('token')).exp * 1000) : null)\n      console.log(this.state.authorised);\n    }\n\n    componentDidUpdate(prevState) {// if(prevState.authorised !== this.state.authorised){\n      //     console.log('no longer authorised')\n      // }\n    }\n\n    render() {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.authorised ? /*#__PURE__*/_jsxDEV(Page, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/login\",\n            render: props => /*#__PURE__*/_jsxDEV(Login, { ...props\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 67\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n            to: {\n              pathname: \"./login\",\n              state: {\n                authorised: false\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this);\n    }\n\n  };\n};\n\n_c = Authentication;\nexport default Authentication;\n\nvar _c;\n\n$RefreshReg$(_c, \"Authentication\");","map":{"version":3,"sources":["/Users/jingkangng/Documents/Y4S1/CG4002/dashboard/client/src/components/Authorisation/Authorisation.js"],"names":["React","Component","Redirect","Route","decode","Login","Authentication","Page","constructor","token","localStorage","getItem","decodedToken","console","log","state","authorised","componentDidMount","componentDidUpdate","prevState","render","props","pathname"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,QAAR,EAAkBC,KAAlB,QAA8B,kBAA9B;AACA,OAAOC,MAAP,MAAmB,YAAnB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;;;AAGA,MAAMC,cAAc,GAAIC,IAAD,IAAU;AAC7B,SAAO,cAAcN,SAAd,CAAuB;AAC1BO,IAAAA,WAAW,GAAE;AACT;AAEA,YAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,UAAIC,YAAY,GAAG,CAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBL,KAApB;;AACA,UAAIA,KAAK,IAAI,IAAb,EAAkB;AACdI,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACH,OAFD,MAEK;AACDD,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EADC,CAED;AACH,OAXQ,CAaT;;;AAEA,WAAKC,KAAL,GAAa;AACT;AACAC,QAAAA,UAAU,EAAE;AAFH,OAAb;AAIH;;AACDC,IAAAA,iBAAiB,GAAE;AACf;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,UAAvB;AACH;;AACDE,IAAAA,kBAAkB,CAACC,SAAD,EAAW,CACzB;AACA;AACA;AACH;;AACDC,IAAAA,MAAM,GAAE;AACJ,0BACI;AAAA,kBACK,KAAKL,KAAL,CAAWC,UAAX,gBACD,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,gBADC,gBAGD;AAAA,kCACI,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,QAAZ;AAAqB,YAAA,MAAM,EAAKK,KAAD,iBAAW,QAAC,KAAD,OAAWA;AAAX;AAAA;AAAA;AAAA;AAAA;AAA1C;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,QAAD;AAAU,YAAA,EAAE,EAAE;AACVC,cAAAA,QAAQ,EAAC,SADC;AAEVP,cAAAA,KAAK,EAAC;AAAEC,gBAAAA,UAAU,EAAE;AAAd;AAFI;AAAd;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAcH;;AA7CyB,GAA9B;AA+CH,CAhDD;;KAAMV,c;AAkDN,eAAeA,cAAf","sourcesContent":["import React, { Component } from 'react';\nimport {Redirect, Route} from 'react-router-dom'\nimport decode from 'jwt-decode';\nimport Login from '../Login/Login'\n\n\nconst Authentication = (Page) => {\n    return class extends Component{\n        constructor(){\n            super();\n\n            const token = localStorage.getItem('token')\n            let decodedToken = 0\n            console.log('token',token)\n            if (token == null){\n                console.log('no token')\n            }else{\n                console.log('tokennnn')\n                // decodedToken = decode(localStorage.getItem('token'))\n            }\n\n            // const decodedToken = localStorage.getItem('token')  ? decode(localStorage.getItem('token')) : null\n\n            this.state = {\n                // authorised: token ? (decodedToken.exp * 1000 > new Date().getTime()) : false\n                authorised: false\n            };\n        }\n        componentDidMount(){\n            // console.log(localStorage.getItem('token') ? new Date(decode(localStorage.getItem('token')).exp * 1000) : null)\n            console.log(this.state.authorised)\n        }\n        componentDidUpdate(prevState){\n            // if(prevState.authorised !== this.state.authorised){\n            //     console.log('no longer authorised')\n            // }\n        }\n        render(){\n            return(\n                <div>\n                    {this.state.authorised ? \n                    <Page /> \n                    : \n                    <div> \n                        <Route path=\"/login\" render = {(props) => <Login {...props} />} />\n                        <Redirect to={{\n                            pathname:\"./login\",\n                            state:{ authorised: false }\n                        }} /> \n                    </div>}\n                </div>\n            )\n        }\n    };\n}\n \nexport default Authentication;\n"]},"metadata":{},"sourceType":"module"}